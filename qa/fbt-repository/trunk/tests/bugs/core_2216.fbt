{
'id': 'bugs.core_2216',
'qmid': '',
'tracker_id': 'CORE-2216',
'title': 'Nbackup as online dump',
'description': 
 """ 
   We create table and leave it empty, than we run "nbackup -b 0 <source_db> <nbk_level_0>".
   After this add one row in the table in source DB.
   Then we obtain database GUID of sourec DB and use it in following commands:
   1. nbackup -b <GUID> <source_db> <addi_file>
   2. nbackup -i -r <nbk_level_0> <addi_file>
   Finally, we:
   1. Check that inserted record actually does exist in <nbk_level_0>; 
   2. Run online validation of <nbk_level_0> - it sould NOT produce any errors.

   40CS, build 4.0.0.651: OK, 5.031s.
   40SC, build 4.0.0.651: OK, 4.765s.
   40SS, build 4.0.0.680: OK, 4.031s.
 """,
'min_versions': '4.0',
'versions': [
{
 'firebird_version': '4.0',
 'platform': 'All',
 'init_script':
  """
      create table test(id int, s varchar(10) unique using index test_s, t timestamp, b blob);
  """,
 'test_type': 'Python',
 'test_script': 
  """
import os
import subprocess
os.environ["ISC_USER"] = user_name
os.environ["ISC_PASSWORD"] = user_password
db_conn.close()

dbfile='$(DATABASE_LOCATION)bugs.core_2216.fdb'
tmpnbk='$(DATABASE_LOCATION)bugs.core_2216_nb0.fdb'
tmpadd='$(DATABASE_LOCATION)bugs.core_2216_add.tmp'

if os.path.isfile(tmpnbk):
     os.remove(tmpnbk)
if os.path.isfile(tmpadd):
     os.remove(tmpadd)

f_nbk1_log=open( os.path.join(context['temp_directory'],'tmp_nbk1_2216.log'), 'w')
f_nbk1_err=open( os.path.join(context['temp_directory'],'tmp_nbk1_2216.err'), 'w')
subprocess.call( ['nbackup', '-b', '0', dbfile, tmpnbk], stdout=f_nbk1_log,stderr=f_nbk1_err )
f_nbk1_log.close()
f_nbk1_err.close()


f_run_sql=open( os.path.join(context['temp_directory'],'tmp_run_2216.sql'), 'w')
f_run_sql.write('set list on; select rb.rdb$guid as db_guid from rdb$backup_history rb;')
f_run_sql.close()

f_run_log=open( os.path.join(context['temp_directory'],'tmp_run_2216.log'), 'w')
subprocess.call( ['isql', dsn, '-i', f_run_sql.name], stdout=f_run_log,stderr=subprocess.STDOUT )
f_run_log.close()

with open( f_run_log.name,'r') as f:
  for line in f:
    if line.split():
      db_guid=line.split()[1]
f.close()
#print('db_GUID=',db_guid)

runProgram('isql',[dsn], "insert into test(id,s,t,b) values(1, 'qwerty','11.12.2013 14:15:16.178', 'foo-rio-bar');")

# nbackup -b {28287188-0E3A-4662-29AB-61F7E117E1C0} C:\MIX\firebird\QA\fbt-repo\tmp\E40.FDB C:\MIX\firebird\QA\fbt-repo\tmp\e40.bku
# nbackup -i -r C:\MIX\firebird\QA\fbt-repo\tmp\e40.nb0 C:\MIX\firebird\QA\fbt-repo\tmp\e40.bku

#runProgram('nbackup',['-b', db_guid, dbfile, tmpadd])

f_nbk2_log=open( os.path.join(context['temp_directory'],'tmp_nbk2_2216.log'), 'w')
f_nbk2_err=open( os.path.join(context['temp_directory'],'tmp_nbk2_2216.err'), 'w')
subprocess.call( ['nbackup', '-b', db_guid, dbfile, tmpadd], stdout=f_nbk2_log, stderr=f_nbk2_err )
f_nbk2_log.close()
f_nbk2_err.close()



f_nbk3_log=open( os.path.join(context['temp_directory'],'tmp_nbk3_2216.log'), 'w')
f_nbk3_err=open( os.path.join(context['temp_directory'],'tmp_nbk3_2216.err'), 'w')
subprocess.call( ['nbackup', '-i', '-r', tmpnbk, tmpadd], stdout=f_nbk3_log, stderr=f_nbk3_err )
f_nbk3_log.close()
f_nbk3_err.close()

# Checking query:
#################
runProgram('isql',['localhost:'+tmpnbk],"set list on;set count on;set blob all;select id,s,t,b as blob_id from test;" )

f_val_log=open( os.path.join(context['temp_directory'],'tmp_val_2216.log'), "w")
f_val_err=open( os.path.join(context['temp_directory'],'tmp_val_2216.err'), "w")

subprocess.call(["fbsvcmgr","localhost:service_mgr",
                 "action_validate",
                 "dbname", tmpnbk
                ],
                stdout=f_val_log,
                stderr=f_val_err)
f_val_log.close()
f_val_err.close()

with open( f_val_log.name,'r') as f:
    print(f.read())
f.close()

# All of these files must be empty:
###################################
f_list=(f_nbk1_err, f_nbk2_err, f_nbk3_err, f_val_err)
for i in range(len(f_list)):
    with open( f_list[i].name,'r') as f:
        for line in f:
            if line.split():
                print( 'UNEXPECTED STDERR in file '+f_list[i].name+': '+line.upper() )
    f.close()


# Cleanup.
###############################

f_list=( f_run_sql,f_run_log, f_nbk1_log,f_nbk1_err, f_nbk2_log,f_nbk2_err, f_nbk3_log,f_nbk3_err, f_val_log,f_val_err)
for i in range(len(f_list)):
    if os.path.isfile(f_list[i].name):
        os.remove(f_list[i].name)

os.remove(tmpnbk)
os.remove(tmpadd)

  """,
 'expected_stdout':
  """
    ID                              1
    S                               qwerty
    T                               2013-12-11 14:15:16.1780
    foo-rio-bar
    Records affected: 1
    Validation started
    Relation (TEST)
    process pointer page    0 of    1
    Index 1 (TEST_S)
    Relation (TEST) is ok
    Validation finished
  """,
 'expected_stderr':
  """
  """,
  'substitutions':[
      ('BLOB_ID.*',''),
      ('[0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9]',''),
      ('Relation [0-9]{3,4}','Relation')
  ]
},
]
}
