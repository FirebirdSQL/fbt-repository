{
'id': 'functional.arno.optimizer.opt_sort_by_index_09',
'qmid': 'functional.arno.optimizer.opt_sort_by_index_09',
'tracker_id': '',
'title': 'ORDER BY ASC using index (non-unique)',
'description': """ORDER BY X
If WHERE clause is present it should also use index if possible.""",
'versions': [
{
 'firebird_version': '2.0',
 'platform': 'All',
 'init_script': """CREATE TABLE Table_66 (
  ID INTEGER
);

SET TERM ^^ ;
CREATE PROCEDURE PR_FillTable_66
AS
DECLARE VARIABLE FillID INTEGER;
BEGIN
  FillID = 2147483647;
  WHILE (FillID > 0) DO
  BEGIN
    INSERT INTO Table_66 (ID) VALUES (:FillID);
    FillID = FillID / 2;
  END
  INSERT INTO Table_66 (ID) VALUES (NULL);
  INSERT INTO Table_66 (ID) VALUES (0);
  INSERT INTO Table_66 (ID) VALUES (NULL);
  FillID = -2147483648;
  WHILE (FillID < 0) DO
  BEGIN
    INSERT INTO Table_66 (ID) VALUES (:FillID);
    FillID = FillID / 2;
  END
END
^^
SET TERM ; ^^

COMMIT;

EXECUTE PROCEDURE PR_FillTable_66;

COMMIT;

CREATE ASC INDEX I_Table_66_ASC ON Table_66 (ID);
CREATE DESC INDEX I_Table_66_DESC ON Table_66 (ID);

COMMIT;
""",
 'test_type': 'ISQL',
 'test_script': """SET PLAN ON;
SELECT
  ID
FROM
  Table_66 t66
WHERE
  t66.ID BETWEEN -20 and 20
ORDER BY
  t66.ID ASC;""",
 'expected_stdout': """PLAN (T66 ORDER I_TABLE_66_ASC INDEX (I_TABLE_66_ASC))

          ID
============

         -16
          -8
          -4
          -2
          -1
           0
           1
           3
           7
          15
""",
 'substitutions': [('=.*','')]
},
{
 'firebird_version': '3.0',
 'platform': 'All',
 'init_script': 
  """
    create table table_66 (id integer);
    commit;
    set term ^ ;
    create procedure pr_filltable_66 as
      declare fillid integer;
    begin
      fillid = 2147483647;
      while (fillid > 0) do
      begin
        insert into table_66 (id) values (:fillid);
        fillid = fillid / 2;
      end
      insert into table_66 (id) values (null);
      insert into table_66 (id) values (0);
      insert into table_66 (id) values (null);
      fillid = -2147483648;
      while (fillid < 0) do
      begin
        insert into table_66 (id) values (:fillid);
        fillid = fillid / 2;
      end
    end
    ^
    set term ; ^
    commit;
    
    execute procedure pr_filltable_66;
    commit;
    
    create asc index i_table_66_asc on table_66 (id);
    create desc index i_table_66_desc on table_66 (id);
    commit;
  """,
 'test_type': 'ISQL',
 'test_script': 
  """
    -- Queries with RANGE index scan now have in the plan only "ORDER"
    -- clause (index navigation) without bitmap building.
    -- See: http://tracker.firebirdsql.org/browse/CORE-1550
    -- ("the same index should never appear in both ORDER and INDEX parts of the same plan item")

    -- :::::::::::::::::::::::::::::::::::::::::::::::
    -- do *NOT* use SET E`XPLAIN untill extremely need. 
    -- Always consult with Dmitry before doing this!
    -- :::::::::::::::::::::::::::::::::::::::::::::::

    set plan on; 

    select id as id_asc
    from table_66 t66
    where t66.id between -20 and 20
    order by t66.id asc;

    select id as id_desc
    from table_66 t66
    where t66.id between -20 and 20
    order by t66.id desc;

  """,
 'expected_stdout': 
  """
    PLAN (T66 ORDER I_TABLE_66_ASC)
    ID_ASC
       -16
        -8
        -4
        -2
        -1
         0
         1
         3
         7
        15

    PLAN (T66 ORDER I_TABLE_66_DESC)
    ID_DESC
         15
          7
          3
          1
          0
         -1
         -2
         -4
         -8
        -16
  """,
 'substitutions': [('=.*','')]
}

]
}
