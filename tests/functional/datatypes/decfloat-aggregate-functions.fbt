{
'id': 'functional.datatypes.decfloat-scalar-functions',
'qmid': None,
'tracker_id': 'CORE-5535',
'title': 
 """
   Test common math functions that should work with DECFLOAT datatype.
 """,
'description': 
 """
    See CORE-5535 and doc\sql.extensions\README.data_types:
    ---
    	Agregate functions SUM, AVG, MAX and MIN also work with DECFLOAT data.
    	All statistics aggregates (like but not limited to STDDEV or CORR) work with DECFLOAT data.
    ---
    FB40SS, build 4.0.0.651: OK, 1.265s.
 """,
'min_versions': '4.0.0',
'versions': [
{
 'firebird_version': '4.0',
 'platform': 'All',
 'test_type': 'ISQL',
 'test_script': 
  """
    set list on;

    recreate table test(
        id int generated by default as identity constraint pk_test primary key using index pk_test
       ,x decfloat(34)
       ,s decfloat(34)
    );

    insert into test(id, x,s)
    with recursive r as (

        select i,n as x, n as s
        from (
        select
             1 as i
            --,179769313486231500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 as n
as n
as n
        from rdb$database
        )
        union all
        select r.i+1, r.x / 2, r.s + r.x/2
        from r where r.i<1024
    )
    select i,x,s from r;

    select 
        iif( sum(x) = (select max(s) from test), 'CORRECT','WRONG!' ) as sum_x_check
       ,sum(x) as sum_x
       ,min(x) as min_x
       ,max(x) as max_x
    from test
    ;

    select sum_x_over, min_x_over, max_x_over
    from (
    select 
        id
       ,sum(x)over(order by id) as sum_x_over
       ,min(x)over() as min_x_over
       ,max(x)over() as max_x_over
    from test
    )
    order by id desc rows 1
    ;
  """,
  'expected_stdout':
  """
    SUM_X_CHECK                     CORRECT
    SUM_X                            1.555555555555555555555555555555556E+1024
    MIN_X                              8.65306500530578315646201612296015E+715
    MAX_X                            7.777777777777777777777777777777778E+1023

    SUM_X_OVER                       1.555555555555555555555555555555556E+1024
    MIN_X_OVER                         8.65306500530578315646201612296015E+715
    MAX_X_OVER                       7.777777777777777777777777777777778E+1023
  """,
  'expected_stderr':
  """
  """
}
]
}
