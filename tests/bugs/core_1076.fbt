{
'id': 'bugs.core_1076',
'qmid': 'bugs.core_1076-20',
'tracker_id': 'CORE-1076',
'title': 'gsec truncate First.Middle.Last Name fields to 17 chars instead of 32 chars available in field definition',
'description': 
 """
   FB2.0 correctly saves First, Middle & Last Name fields in the security database to the available length of 32 characters.
   FB1.5.3 and still now FB1.5.4RC1 truncates these field lengths to 17 chars.
   ---
   11.01.2016: refactored for 3.0: use FBSVCMGR instead of GSEC. This was agreed with Alex, see his reply 11.01.2015 17:57.

 """,
'min_versions': None,
'versions': [
{
 'firebird_version': '2.0',
 'platform': 'All',
 'test_type': 'Python',
 'test_script': '''commands = """add TEST1076 -pw PWD -fname 123456789012345678901234567890az -mname 123456789012345678901234567890az -lname 123456789012345678901234567890az
display TEST1076
delete TEST1076
quit
"""
runProgram('gsec',['-user',user_name,'-pas',user_password],commands)''',
 'expected_stdout': """GSEC> GSEC>      user name                      uid   gid     full name
------------------------------------------------------------------------------------------
TEST1076                            0     0      123456789012345678901234567890az 123456789012345678901234567890az 123456789012345678901234567890az
GSEC> GSEC>"""
},
{
 'firebird_version': '1.5.5',
 'platform': 'All',
 'test_type': 'Python',
 'test_script': '''commands = """add TEST1076 -pw PWD -fname 123456789012345678901234567890az -mname 123456789012345678901234567890az -lname 123456789012345678901234567890az
display TEST1076
delete TEST1076
quit
"""
runProgram('gsec',['-user',user_name,'-pas',user_password],commands)''',
 'expected_stderr': """GSEC> GSEC>      user name                      uid   gid     full name
------------------------------------------------------------------------------------------
TEST1076                            0     0      123456789012345678901234567890az 123456789012345678901234567890az 123456789012345678901234567890az
GSEC> GSEC>"""
},
{
 'firebird_version': '2.5',
 'platform': 'All',
 'test_type': 'Python',
 'test_script': '''commands = """add TEST1076 -pw PWD -fname 123456789012345678901234567890az -mname 123456789012345678901234567890az -lname 123456789012345678901234567890az
display TEST1076
delete TEST1076
quit
"""
runProgram('gsec',['-user',user_name,'-pas',user_password],commands)''',
 'expected_stdout':
  """
       user name                    uid   gid admin     full name
       TEST1076                            0     0           123456789012345678901234567890az 123456789012345678901234567890az 123456789012345678901234567890az
  """,
 'substitutions': [
     ('GSEC>.*',''),
     ('-.*',''),
     ('.*gsec is deprecated.*','')
  ]
},
{
 'firebird_version': '3.0',
 'platform': 'All',
 'test_type': 'Python',
 'test_script': 
  """\
import os
import time
import subprocess
from subprocess import Popen

db_conn.close()
db_name='$(DATABASE_LOCATION)bugs.core_1076.fdb'

# C:\MIX\firebird\QA\fbt-repo>fbsvcmgr localhost:service_mgr info_user_dbpath
# Security database: C:\MIX\firebird\fb30\security3.fdb

security_db_info=subprocess.check_output( \
                  [ "fbsvcmgr", \
                    "localhost:service_mgr",\
                    "user","SYSDBA","password","masterkey",\
                    "info_user_dbpath" \
                  ] \
                                        )
# Path and name of file for security database:
security_db_name=security_db_info.split()[2]

check_login="Nebuchadnezzar2_King_of_Babylon"

f_svc_log=open( os.path.join(context['temp_directory'],'tmp_1076_fbsvc.log'), 'w')
f_svc_err=open( os.path.join(context['temp_directory'],'tmp_1076_fbsvc.err'), 'w')

f_svc_log.write("Try to add user.")
f_svc_log.write("\\n")
f_svc_log.seek(0,2)

subprocess.call( [ "fbsvcmgr", \
                    "localhost:service_mgr",\
                    "user","SYSDBA","password","masterkey",\
                    "action_add_user", \
                    "dbname",       security_db_name, \
                    "sec_username", check_login, \
                    "sec_password", "Nebu_King_of_Babylon" \
                  ], \
                  stdout=f_svc_log, stderr=f_svc_err
               )

f_svc_log.seek(0,2)
f_svc_log.write("\\n")
f_svc_log.write("Try to modify user: change password and some attributes.")
f_svc_log.write("\\n")
f_svc_log.seek(0,2)

subprocess.call( [ "fbsvcmgr", \
                    "localhost:service_mgr",\
                    "user","SYSDBA","password","masterkey",\
                    "action_modify_user", \
                    "dbname",         security_db_name, \
                    "sec_username",   check_login, \
                    "sec_firstname",  "Nebuchadnezzar3_King_of_Babylon", \
                    "sec_middlename", "Nebuchadnezzar4_King_of_Babylon", \
                    "sec_lastname",   "Nebuchadnezzar5_King_of_Babylon"  \
                  ], \
                  stdout=f_svc_log, stderr=f_svc_err
               )

f_svc_log.seek(0,2)
f_svc_log.write("\\n")
f_svc_log.write("All done.")
f_svc_log.write("\\n")

f_svc_log.close()
f_svc_err.close()

isql_txt='''\
set list on; 
select sec$user_name, sec$first_name, sec$middle_name, sec$last_name from sec$users 
where upper(sec$user_name)=upper('%s');
commit;
drop user %s;
''' % (check_login, check_login)

f_sql_txt=open( os.path.join(context['temp_directory'],'tmp_1076_isql.sql'), 'w')
f_sql_txt.write(isql_txt)
f_sql_txt.close()

f_sql_log=open( os.path.join(context['temp_directory'],'tmp_1076_isql.log'), 'w')
f_sql_err=open( os.path.join(context['temp_directory'],'tmp_1076_isql.err'), 'w')

subprocess.call( [ "isql", dsn, "-user","SYSDBA","-password","masterkey", "-i",   f_sql_txt.name ], \
                 stdout=f_sql_log, stderr=f_sql_err
               )

f_sql_log.close()
f_sql_err.close()

with open( f_svc_log.name,'r') as f:
  l = [l for l in f.readlines() if l.strip()]
f.close()
for line in l:
   print("SVC STDOUT: "+line )

with open( f_svc_err.name,'r') as f:
  l = [l for l in f.readlines() if l.strip()]
f.close()
for line in l:
   print("SVC STDERR: "+line )

with open( f_sql_log.name,'r') as f:
  l = [l for l in f.readlines() if l.strip()]
f.close()
for line in l:
   print("SQL STDOUT: "+line )

with open( f_sql_err.name,'r') as f:
  l = [l for l in f.readlines() if l.strip()]
f.close()
for line in l:
   print("SQL STDERR: "+line )

#############################################

# Cleanup.
time.sleep(1)
os.remove(f_svc_log.name)
os.remove(f_svc_err.name)
os.remove(f_sql_log.name)
os.remove(f_sql_err.name)
os.remove(f_sql_txt.name)
  """,
 'expected_stdout':
  """
    SVC STDOUT: Try to add user.
    SVC STDOUT: Try to modify user: change password and some attributes.
    SVC STDOUT: All done.
    SQL STDOUT: SEC$USER_NAME                   NEBUCHADNEZZAR2_KING_OF_BABYLON
    SQL STDOUT: SEC$FIRST_NAME                  Nebuchadnezzar3_King_of_Babylon
    SQL STDOUT: SEC$MIDDLE_NAME                 Nebuchadnezzar4_King_of_Babylon
    SQL STDOUT: SEC$LAST_NAME                   Nebuchadnezzar5_King_of_Babylon
  """
}
]
}
