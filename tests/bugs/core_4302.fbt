{
'id': 'bugs.core_4302',
'qmid': None,
'tracker_id': 'CORE-4302',
'title': ' Lookup (or scan) in descending index could be very inefficient for some keys',
'description': '',
'min_versions': '2.5.3',
'versions': [
{
 'firebird_version': '2.5',
 'platform': 'All',
 'database': 'Restore',
 'backup_file': 'mon-stat-gathering-2_5.fbk',
 'page_size': '4096',
 'test_type': 'ISQL',
 'init_script':
  """
    recreate table td(id int, s varchar(50));
    commit;
    set term ^;
    execute block as
    begin
        begin
            execute statement 'create sequence g';
        when any do begin end
        end
    end^
    set term ;^
    commit;
    alter sequence g restart with 0;
    commit;
    
    set term ^;
    execute block as
    declare n int = 10000;
    declare m int;
    begin
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'q' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qw' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwe' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwer' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwert' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwerty' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwertyu' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwertyui' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwertyuio' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwertyuiop' ) returning :m-1 into m;
    end
    ^ 
    set term ;^ 
    commit;
  """,
 'test_script': 
  """
    create index td_s_asc on td(s); 
    commit;
    
    execute procedure sp_truncate_stat;
    commit;
    
    execute procedure sp_gather_stat; ------- catch statistics BEFORE measured statement(s)
    commit;
    
    select 1 from rdb$database where exists(select * from td where s='qwertyuioo'); -- note: `o` duplicated at the end of key 
    
    execute procedure sp_gather_stat;  ------- catch statistics AFTER measured statement(s)
    commit;
    
    drop index td_s_asc;
    commit;
    
    create descending index td_s_des on td(s); 
    commit;
    
    execute procedure sp_gather_stat; ------- catch statistics BEFORE measured statement(s)
    commit;
    
    select 1 from rdb$database where exists(select * from td where s='qwertyuioo'); -- note: `o` duplicated at the end of key 
    
    execute procedure sp_gather_stat;  ------- catch statistics AFTER measured statement(s)
    commit;
    
    set list on;
    
    -- Show results:
    -- =============
    select 
        --v.rowset
        iif( mod(v.rowset,2)=1, 'ascending', 'descending') as index_used
       ,iif( v.page_fetches < v.huge_fetches, 'normal', '!high!' ) as num_of_fetches
       ,iif( v.indexed_reads < v.huge_idx_reads, 'normal', '!high!' ) as num_of_idx_reads
        --   ,v.page_fetches,v.indexed_reads -- 4debug
    from (
        select
            v.rowset
           ,v.page_fetches
           ,v.indexed_reads
           -- these values were adjusted after several measurements on WI-V2.5.4.26847 SuperServer
           -- with default value of DefaultDBCachePages and when it was 8192
           ,iif( mod(v.rowset,2)=1, 200, 50 ) huge_fetches     
           ,iif( mod(v.rowset,2)=1,  50,  5 ) huge_idx_reads
        from v_agg_stat v
    ) v;
   
    drop sequence g;
    drop table td;
    commit;
  """,
 'expected_stdout': 
  """
    INDEX_USED                      ascending 
    NUM_OF_FETCHES                  normal
    NUM_OF_IDX_READS                normal
    
    INDEX_USED                      descending
    NUM_OF_FETCHES                  normal
    NUM_OF_IDX_READS                normal
  """
},
{
 'firebird_version': '3.0',
 'platform': 'All',
 'database': 'Restore',
 'backup_file': 'mon-stat-gathering-3_0.fbk',
 'page_size': '4096',
 'test_type': 'ISQL',
 'init_script':
  """
    recreate table td(id int, s varchar(50));
    commit;
    set term ^;
    execute block as
    begin
        begin
            execute statement 'create sequence g';
        when any do begin end
        end
    end^
    set term ;^
    commit;
    alter sequence g restart with 0;
    commit;
    
    set term ^;
    execute block as
    declare n int = 10000;
    declare m int;
    begin
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'q' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qw' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwe' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwer' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwert' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwerty' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwertyu' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwertyui' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwertyuio' ) returning :m-1 into m;
        m=n; while(m>0) do insert into td(id, s) values( gen_id(g,1), 'qwertyuiop' ) returning :m-1 into m;
    end
    ^ 
    set term ;^ 
    commit;
  """,
 'test_script': 
  """
    create index td_s_asc on td(s); 
    commit;
    
    execute procedure sp_truncate_stat;
    commit;
    
    execute procedure sp_gather_stat; ------- catch statistics BEFORE measured statement(s)
    commit;
    
    select 1 from rdb$database where exists(select * from td where s='qwertyuioo'); -- note: `o` duplicated at the end of key 
    
    execute procedure sp_gather_stat;  ------- catch statistics AFTER measured statement(s)
    commit;
    
    drop index td_s_asc;
    commit;
    
    create descending index td_s_des on td(s); 
    commit;
    
    execute procedure sp_gather_stat; ------- catch statistics BEFORE measured statement(s)
    commit;
    
    select 1 from rdb$database where exists(select * from td where s='qwertyuioo'); -- note: `o` duplicated at the end of key 
    
    execute procedure sp_gather_stat;  ------- catch statistics AFTER measured statement(s)
    commit;
    
    set list on;
    
    -- Show results:
    -- =============
    select 
        --v.rowset
        iif( mod(v.rowset,2)=1, 'ascending', 'descending') as index_used
       ,iif( v.page_fetches < v.huge_fetches, 'normal', '!high!' ) as num_of_fetches
       ,iif( v.indexed_reads < v.huge_idx_reads, 'normal', '!high!' ) as num_of_idx_reads
       --    ,v.page_fetches,v.indexed_reads -- 4debug
    from (
        select
            v.rowset
           ,v.page_fetches
           ,v.indexed_reads
           -- these values were adjusted after several measurements on WI-T3.0.0.31708 (CS/SC/SS)
           -- with default value of DefaultDBCachePages and when it was: 256 on CS, 512 on SC and 8192 on SS.
           ,iif( mod(v.rowset,2)=1, 150, 100 ) huge_fetches
           ,iif( mod(v.rowset,2)=1,  20,   5 ) huge_idx_reads
        from v_agg_stat_main v
    ) v;
    
    drop sequence g;
    drop table td;
    commit;
  """,
 'expected_stdout': 
  """
    INDEX_USED                      ascending 
    NUM_OF_FETCHES                  normal
    NUM_OF_IDX_READS                normal
    
    INDEX_USED                      descending
    NUM_OF_FETCHES                  normal
    NUM_OF_IDX_READS                normal
  """
}
]
}
