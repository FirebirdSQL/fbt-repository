{
'id': 'bugs.core_6166',
'qmid': None,
'tracker_id': 'CORE-6166',
'title': 'Problems with long object names (> 255 bytes)',
'description':
 """
    We define several objects with non-ascii names of max allowed length (63 characters) and make check statements.
	Result no matter, but these statements must finished without errors.
	Then we extract metadata and add the same set of check statements to this sql script.
	Applying of this script to empty (another) database must end also without any error.
	
	Confirmed problem on 4.0.0.1633: ISQL crashed when performing script which contains DDL with non-ascii names 
	of  max allowed len (63 characters).
	
	Checked on 4.0.0.1635: OK, 4.821s. 
 """,
'min_versions': '4.0',
'versions': [
{
 'firebird_version': '4.0',
 'platform': 'All',
 'database_character_set': 'UTF8',
 'connection_character_set': 'UTF8',
 'init_script': 
  """
  """,
 'test_type': 'Python',
 'test_script': 
  """
import os
import subprocess
import time

#--------------------------------------------
def cleanup( f_names_list ):
    global os
    for i in range(len( f_names_list )):
       if os.path.isfile( f_names_list[i] ):
            os.remove( f_names_list[i] )
#--------------------------------------------

os.environ["ISC_USER"] = user_name
os.environ["ISC_PASSWORD"] = user_password
  
sql_ddl='''  
	set term ^;
	recreate package "ПакетДляРешенияЛинейныхГиперболическихИТрансцендентныхУравнений" as
	begin
		function "МетодЗейделяДляЛинейныхГиперболическихИТрансцендентныхУравнений"() returns int;
		function "МетодНьютонаДляЛинейныхГиперболическихИТрансцендентныхУравнений"() returns int;
	end
	^
	recreate package body "ПакетДляРешенияЛинейныхГиперболическихИТрансцендентныхУравнений" as
	begin
		function "МетодЗейделяДляЛинейныхГиперболическихИТрансцендентныхУравнений"() returns int as
		begin
			return 123;
		end
		function "МетодНьютонаДляЛинейныхГиперболическихИТрансцендентныхУравнений"() returns int as
		begin
			return 456;
		end
		
	end
	^
	set term ;^
	commit;
	create table "КоэффициентыДляЛинейныхГиперболическихИТрансцендентныхУравнений" (
		"КоэффициентЦДляЛинейныхГиперболическихИТрансцендентныхУравнений" int
	   ,"КоэффициентЫДляЛинейныхГиперболическихИТрансцендентныхУравнений" int
	   ,"КоэффициентЧДляЛинейныхГиперболическихИТрансцендентныхУравнений" int
	);
	create unique index "КоэффициентыЛинейныхГиперболическихИТрансцендентныхУравненийЦЫЧ"
	on "КоэффициентыДляЛинейныхГиперболическихИТрансцендентныхУравнений" (
		"КоэффициентЦДляЛинейныхГиперболическихИТрансцендентныхУравнений"
	   ,"КоэффициентЫДляЛинейныхГиперболическихИТрансцендентныхУравнений"
	   ,"КоэффициентЧДляЛинейныхГиперболическихИТрансцендентныхУравнений"
	);
	commit;

'''

sql_chk='''

    show package; 
	show index "КоэффициентыДляЛинейныхГиперболическихИТрансцендентныхУравнений";
	set list on;
	select "ПакетДляРешенияЛинейныхГиперболическихИТрансцендентныхУравнений"."МетодЗейделяДляЛинейныхГиперболическихИТрансцендентныхУравнений"() from rdb$database;
	select "ПакетДляРешенияЛинейныхГиперболическихИТрансцендентныхУравнений"."МетодНьютонаДляЛинейныхГиперболическихИТрансцендентныхУравнений"() from rdb$database;
	rollback;
'''

db_conn.close()

f_chk_query_sql=open( os.path.join(context['temp_directory'],'tmp_6166_chk_query.sql'), 'w')
f_chk_query_sql.write( sql_ddl + sql_chk )
f_chk_query_sql.close()

f_chk_query_log = open( os.path.join(context['temp_directory'],'tmp_isql_6166_chk_query.log'), 'w' )
f_chk_query_err = open( os.path.join(context['temp_directory'],'tmp_isql_6166_chk_query.err'), 'w')
subprocess.call( ["isql", dsn, "-ch", "utf8", "-i", f_chk_query_sql.name], stdout=f_chk_query_log, stderr=f_chk_query_err )
f_chk_query_log.close()
f_chk_query_err.close()
time.sleep(1)

if os.path.getsize( f_chk_query_err.name ) == 0:
	with open( f_chk_query_log.name,'r') as f:
		for line in f:
			if line.split():
				print('CHECK STATEMENTS, INITIAL: '+line)
			
	f_chk_metadata_sql=open( os.path.join(context['temp_directory'],'tmp_6166_metadata.sql'), 'w')
	subprocess.call( ["isql", dsn, "-ch", "utf8", "-x" ], stdout=f_chk_metadata_sql, stderr=subprocess.STDOUT )
	f_chk_metadata_sql.write( sql_chk )
	f_chk_metadata_sql.close()
	
	f_chk_metadata_fdb = os.path.join(context['temp_directory'],'tmp_6166_metadata.fdb')
	if os.path.isfile( f_chk_metadata_fdb ):
		os.remove( f_chk_metadata_fdb )
	chk_conn = fdb.create_database( dsn = 'localhost:'+f_chk_metadata_fdb )
	chk_conn.close()

	f_chk_metadata_log = open( os.path.join(context['temp_directory'],'tmp_6166_metadata.log'), 'w' )
	f_chk_metadata_err = open( os.path.join(context['temp_directory'],'tmp_6166_metadata.err'), 'w' )
	subprocess.call( ["isql", 'localhost:'+f_chk_metadata_fdb, "-ch", "utf8", "-i", f_chk_metadata_sql.name ], stdout=f_chk_metadata_log, stderr=f_chk_metadata_err )
	f_chk_metadata_log.close()
	f_chk_metadata_err.close()
	
	time.sleep(1)
	with open( f_chk_metadata_err.name,'r') as f:
		for line in f:
			if line.split():
				print('UNEXPECTED ERROR IN THE EXTRACTED METADATA SQL: '+line)

	with open( f_chk_metadata_log.name,'r') as f:
		for line in f:
			if line.split():
				print('CHECK STATEMENTS ON EXTRACTED METADATA: '+line)

else:
	with open( f_chk_query_err.name,'r') as f:
		for line in f:
			if line.split():
				print('UNEXPECTED ERROR IN INITIAL CHECK STATEMENTS: '+line)

  

f_list = [ i.name for i in ( f_chk_query_sql, f_chk_query_log, f_chk_query_err, f_chk_metadata_sql, f_chk_metadata_log, f_chk_metadata_err ) ]
f_list += [ f_chk_metadata_fdb ]

cleanup( f_list )
""",  
 'expected_stdout': 
  """
    CHECK STATEMENTS, INITIAL: ПакетДляРешенияЛинейныхГиперболическихИТрансцендентныхУравнений 
    CHECK STATEMENTS, INITIAL: КоэффициентыЛинейныхГиперболическихИТрансцендентныхУравненийЦЫЧ UNIQUE INDEX ON КоэффициентыДляЛинейныхГиперболическихИТрансцендентныхУравнений(КоэффициентЦДляЛинейныхГиперболическихИТрансцендентныхУравнений, КоэффициентЫДляЛинейныхГиперболическихИТрансцендентныхУравнений, КоэффициентЧДляЛинейныхГиперболическихИТрансцендентныхУравнений) 
    CHECK STATEMENTS, INITIAL: МетодЗейделяДляЛинейныхГиперболическихИТрансцендентныхУравнений 123 
    CHECK STATEMENTS, INITIAL: МетодНьютонаДляЛинейныхГиперболическихИТрансцендентныхУравнений 456 
	
    CHECK STATEMENTS ON EXTRACTED METADATA: ПакетДляРешенияЛинейныхГиперболическихИТрансцендентныхУравнений 
    CHECK STATEMENTS ON EXTRACTED METADATA: КоэффициентыЛинейныхГиперболическихИТрансцендентныхУравненийЦЫЧ UNIQUE INDEX ON КоэффициентыДляЛинейныхГиперболическихИТрансцендентныхУравнений(КоэффициентЦДляЛинейныхГиперболическихИТрансцендентныхУравнений, КоэффициентЫДляЛинейныхГиперболическихИТрансцендентныхУравнений, КоэффициентЧДляЛинейныхГиперболическихИТрансцендентныхУравнений) 
    CHECK STATEMENTS ON EXTRACTED METADATA: МетодЗейделяДляЛинейныхГиперболическихИТрансцендентныхУравнений 123 
    CHECK STATEMENTS ON EXTRACTED METADATA: МетодНьютонаДляЛинейныхГиперболическихИТрансцендентныхУравнений 456   
  """,
 'expected_stderr': 
  """
  """  
}
]
}
