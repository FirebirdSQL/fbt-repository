{
'id': 'bugs.core_5463',
'qmid': None,
'tracker_id': 'CORE-5463',
'title': 'Support GENERATED ALWAYS identity columns and OVERRIDE clause',
'description':
 """
   Checked on WI-T4.0.0.546. Works fine.
 """,
'min_versions': '4.0',
'versions': [
{
 'firebird_version': '4.0',
 'platform': 'All',
 'test_type': 'ISQL',
 'init_script':
  """
  """,
 'test_script':
  """
    set list on;
    recreate table test_always(
       id_always int generated ALWAYS as identity (start with 11 increment 22) unique
    );

    recreate table test_default(
       id_default int generated BY DEFAULT as identity (start with -11 increment -22) unique
    );


    insert into test_default default values returning id_default; -- expected: -33

    insert into test_always default values returning id_always; -- expected: 33

    -- Comments taken from doc\sql.extensions\README.identity_columns.txt 
    -- ==================================================================

    -- ........................................
    -- Identity columns are implicitly NOT NULL
    -- ........................................
    -- Statement failed, SQLSTATE = 42000
    -- OVERRIDING SYSTEM VALUE should be used to override the value of an identity column defined as 'GENERATED ALWAYS' in ta
    insert into test_always(id_always) values(null);

    -- Statement failed, SQLSTATE = 23000
    -- validation error for column "TEST"."id_default", value "*** null ***"
    insert into test_default(id_default) values(null);


    -- ........................................................................
    -- BY DEFAULT identity columns can be overriden in INSERT statements
    -- just specifying the value in the values list
    -- ........................................................................
    insert into test_default(id_default) values(-7654321) returning id_default;
    -- insert into test_default default values returning id_default; ==> -99 !


    -- ........................................................................
    -- However, for ALWAYS identity columns that is not allowed.
    -- To use the value passed in the INSERT statement for an ALWAYS column, you should pass 
    -- OVERRIDING SYSTEM VALUE:
    -- ........................................................................


    -- 1) check that OVERRIDING SYSTEM VALUE clause does not affect on NOT_NULL constraint:
    -- Statement failed, SQLSTATE = 23000
    -- validation error for column "test_always"."ID_ALWAYS", value "*** null ***"
    insert into test_always(id_always) overriding system value values (null) returning id_always;

    -- 2) check ability to override system value by providing our own:
    insert into test_always(id_always) overriding system value values (7654321) returning id_always;

    -- .........................................................................
    -- OVERRIDING also supports a subclause to be used with BY DEFAULT columns, 
    -- to ignore the value passed in INSERT and use the defined sequence:
    -- .........................................................................

    -- 1) check that attempt to pass NULL into VALUES list has no effect:
    insert into test_default(id_default) overriding user value values(null) returning id_default; -- expected: -99

    -- 2) check ability to pass allowed value but it also must be overriden by default one:
    insert into test_default(id_default) overriding user value values(-7654322) returning id_default; -- expected: -121
  """,
 'expected_stdout': 
  """
    ID_DEFAULT                      -33
    ID_ALWAYS                       33
    ID_DEFAULT                      -7654321
    ID_ALWAYS                       7654321
    ID_DEFAULT                      -55
    ID_DEFAULT                      -77
  """,
 'expected_stderr': 
  """
    Statement failed, SQLSTATE = 42000
    OVERRIDING SYSTEM VALUE should be used

    Statement failed, SQLSTATE = 23000
    validation error for column "TEST_DEFAULT"."ID_DEFAULT", value "*** null ***"

    Statement failed, SQLSTATE = 23000
    validation error for column "TEST_ALWAYS"."ID_ALWAYS", value "*** null ***"
  """,
  'substitutions':[('OVERRIDING SYSTEM VALUE should be used.*', 'OVERRIDING SYSTEM VALUE should be used')]
}
]
}
