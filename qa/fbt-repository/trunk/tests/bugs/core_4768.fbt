{
'id': 'bugs.core_4768',
'qmid': None,
'tracker_id': 'CORE-4768',
'title': "CREATE USER ... TAGS ( argument_1 = 'value1', ..., argument_N = 'valueN' ) - wrong results of statement when there are many arguments",
'description': 
 """
    Checked on:
        FB30SS, build 3.0.4.32985: OK, 7.672s.
        FB40SS, build 4.0.0.1000: OK, 13.094s.
 """,
'min_versions': '3.0',
'versions': [
{
 'firebird_version': '3.0',
 'platform': 'All',
 'test_type': 'Python',
 'init_script':
  """
  """,
 'test_script':
  """
import os
import subprocess
import time

os.environ["ISC_USER"] = user_name
os.environ["ISC_PASSWORD"] = user_password


TAGS_COUNT=100000
#^^^^^^^^^^^^^^^^--- TAGS COUNT: THRESHOLD

f_chk_sql=open( os.path.join(context['temp_directory'],'tmp_tags_4768.sql'), 'w')
f_chk_sql.write('set bail on;\\n')
f_chk_sql.write("create or alter user tmp$c4768_1 password '123' using plugin Srp tags (\\n")

for i in range(0,TAGS_COUNT):
    f_chk_sql.write( ('  ,' if i>0 else '  ') + 'arg_'+str(i)+"='val"+str(i)+"'\\n" )
f_chk_sql.write(');\\n')
f_chk_sql.write('commit;\\n')

sql_check='''\
set count on;
set list on;
select
     u.sec$user_name as usr_name
    ,u.sec$plugin sec_plugin
    ,upper(min( a.sec$key )) tag_min
    ,upper(min( a.sec$value )) val_min
    ,upper(max( a.sec$key )) tag_max
    ,upper(max( a.sec$value )) val_max
    ,count(*) tag_cnt
from sec$users u
left join sec$user_attributes a on u.sec$user_name = a.sec$user_name
where u.sec$user_name = upper('tmp$c4768_1')
group by 1,2
;
commit;
drop user tmp$c4768_1 using plugin Srp;
commit;
'''

f_chk_sql.write(sql_check)
f_chk_sql.write('commit;\\n')


f_chk_sql.close()


f_tags_log = open( os.path.join(context['temp_directory'],'tmp_tags_4768.log'), 'w')
f_tags_err = open( os.path.join(context['temp_directory'],'tmp_tags_4768.err'), 'w')

subprocess.call( ["isql", dsn, "-q", "-i", f_chk_sql.name],
                 stdout = f_tags_log,
                 stderr = f_tags_err
               )

f_tags_log.close()
f_tags_err.close()
time.sleep(1)
with open(f_tags_log.name) as f:
    for line in f:
        print(line)

with open(f_tags_err.name) as f:
    for line in f:
        print('UNEXPECTED STDERR: ' + line)

# CLEANUP:
##########
time.sleep(1)

f_list=( f_chk_sql, f_tags_log, f_tags_err )
for i in range(len(f_list)):
   if os.path.isfile(f_list[i].name):
       os.remove(f_list[i].name)

  """,
 'expected_stdout': 
  """
        USR_NAME                        TMP$C4768_1                                                                                  
        SEC_PLUGIN                      Srp                                                                                          
        TAG_MIN                         ARG_0
        VAL_MIN                         VAL0
        TAG_MAX                         ARG_99999
        VAL_MAX                         VAL99999
        TAG_CNT                         100000
        Records affected: 1
  """,
 'expected_stderr': 
  """
  """
}
]
}
