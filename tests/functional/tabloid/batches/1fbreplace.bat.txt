@echo off

@rem #############################################################################################################
@rem #########    U P G R A D E     F I R E B I R D     I N S A N C E S     F R O M    S N A P S H O T   #########
@rem #############################################################################################################

@rem This batch tries to:
@rem 1. Stop all Firebird services which are specified in the setting variable %FB_SERVICES%.
@rem 2. Remove client libraries (fbclient.ddl) before any further action (exit if this fails),
@rem 3. For each of files from source snapshot folder %SNAPSHOT_DIR%, do:
@rem    3.1. If filename is 'firebird.conf' or 'databases.conf' than create backup of it in the target folder
@rem         (command: copy <name>.conf to <name>.conf.previous) in order to restore it after finish all job;
@rem         After backup will be created - replace <name>.conf with the same file from SNAPSHOT_DIR.
@rem    3.2. All other files - try to remove file with the same name in the <FB_HOME>, log if fault.
@rem    3.2. In case of successfully removed file - copy it from %SNAPSHOT_DIR%
@rem 4. Create SYSDBA/masterke account in each security3.fdb using gsec utility
@rem 5. Restore firebird.conf and databases.conf in <FB_HOME>: copy <name>.conf.previous <name>.conf
@rem 6. Start all Firebird services.
@rem 7. Obtain server versions via fbsvcmgr and display them.
@rem 8. Check log of its own job for text about failed removals of old files and output it.


setlocal enabledelayedexpansion enableextensions

@rem List of Firebird services to be upgraded:
set FB_SERVICES=fb30Cs fb30sC fb30sS

@rem Folder where downloaded snapshot files are:
set SNAPSHOT_DIR=C:\1INSTALL\FIREBIRD\snapshot_builds\30

set log=%~n0.log
del %log% 2>nul

@rem #############################################################################################################
@rem ##########################  T R Y I N G    T O    S T O P    S E R V I C E S  ###############################
@rem #############################################################################################################
for /d %%s in ( %FB_SERVICES% ) do (
  echo %%s
  sc query FirebirdServer%%s | findstr /i /c:"STOPPED" 1>nul 2>&1
  if errorlevel 1 (
    set msg=Stopping service FirebirdServer%%s
    echo !msg!
    echo.>>%log%
    echo !msg!>>%log%
    set cmd_run=sc stop FirebirdServer%%s
    echo !cmd_run!
    echo !cmd_run!>>%log%
    sc stop FirebirdServer%%s >>%log%
    echo Wait a few seconds. . .
    ping -n 1 -w 1500 1.1.1.1 1>nul 2>&1
    echo Check that service is really stopped:>>%log%
    set cmd_run=sc query FirebirdServer%%s
    echo !cmd_run!
    echo !cmd_run!>>%log%
    sc query FirebirdServer%%s>>%log%
    sc query FirebirdServer%%s | findstr /i /c:"STOPPED" 1>nul 2>&1
    if errorlevel 1 (
      set msg=CAN NOT STOP SERVICE! Job terminated.
      echo !msg!
      echo !msg!>>%log%
      exit
    ) else (
      set msg=Service has been successfully stopped.
      echo !msg!
      echo !msg!>>%log%
    )
  ) else (
    sc query FirebirdServer%%s>>%log%
    set msg=Service already has been stopped.
    echo !msg!
    echo !msg!>>%log%
  )
)

@rem #############################################################################################################
@rem ####################  T R Y I N G    T O    D E L E T E    F B C L I E N T . D L L  #########################
@rem #############################################################################################################

for /d %%i in ( %FB_SERVICES% ) do (
  del %~n0.err 2>nul

  for /f "tokens=3" %%k in ('REG.EXE query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\FirebirdServer%%i ^| findstr /i /c:"ImagePath"') do (
    set fn=%%k
    set fp=%%~dpk
    set fp=!fp:~0,-1!
    set msg=Home dir for %%i: !fp!
    echo !msg!
    echo !msg!>>%log%
  )

  set fn=!fp!\fbclient.dll
  if exist !fn! (
    set msg=Trying to delete !fn! - perhaps it can be loaded now by some app.
    echo !msg!
    echo !msg!>>%log%
    del !fn! 2>%~n0.err
    type %~n0.err>>%log%
    for /f "usebackq" %%A in ('%~n0.err') do set errsize=%%~zA
    if .!errsize!.==.. set errsize=0
    if !errsize! gtr 0 (
       echo dir !fn!>>%log%
       dir !fn! | findstr /i /c:fbclient.dll>>%log%
       set msg=File !fn! can not be deleted. Batch terminated.
       echo !msg!
       echo !msg!>>%log%
       del %~n0.err 2>nul
       exit
    )
    set msg=File !fn! has been successfully deleted.
    echo !msg!
    echo !msg!>>%log%
  ) else (
    set msg=Client library !fn! does not exist. Skip trying to delete it.
    echo !msg!
    echo !msg!>>%log%
  )
)
del %~n0.err 2>nul

:m1

@rem #############################################################################################################
@rem #################  C O P Y I N G     A L L    F I L E S    F R O M     S N A P S H O T ######################
@rem #############################################################################################################
for /d %%i in ( %FB_SERVICES% ) do (
  for /f "tokens=3" %%k in ('REG.EXE query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\FirebirdServer%%i ^| findstr /i /c:"ImagePath"') do (
    @rem Image path of FB service ('drive:\path\firebird.exe'):
    set fn=%%k
    @rem Path to FB instance ('drive:\path\')
    set fp=%%~dpk
    @rem Remove trailing backslash:
    set fp=!fp:~0,-1!

    echo Copying files from %SNAPSHOT_DIR% to !fp!. . .
    for /f %%a in ('dir /s /a-d /b %SNAPSHOT_DIR%') do (
      @rem set fn=%%~da%%~pa%%a
      set sn=%%a
      set sp=%%~da%%~pa

      @rem Replace in full path+filename from SNAPSHOT folder its PATH to the folder of currently processed FB instance:
      set tp=!sn:%SNAPSHOT_DIR%\=%%~dpk!
    
      set skip=0
      if /i "%%~nxa"=="firebird.conf" set skip=1
      if /i "%%~nxa"=="databases.conf" set skip=1
      @rem ----- if /i "%%~nxa"=="security3.fdb" set skip=1
      if .!skip!.==.1. (
        if exist !tp! (
          @rem Before replace firebird.conf and databases.conf we have to backup them.
          @rem After copying all files (and before starting services) these files (`firebird.conf`
          @rem and `databases.conf`) need to be renamed back.

          set cmd_run=copy !tp! !tp!.previous
          
          set msg=### CREATING BACKUP ### %%a
          echo !msg!>>%log%
          echo !cmd_run!>>%log%

          cmd /c !cmd_run! 1>>%log% 2>&1
        )
        set copy_cmd=copy !sn! !tp!
        echo !copy_cmd!>>%log%
        cmd /c !copy_cmd! 1>>%log% 2>&1
      ) else (
        del %~n0.err 2>nul
        if exist !tp! (
          set del_cmd=del !tp!
          echo !del_cmd! 1>>%log%
          cmd /c !del_cmd! 2>%~n0.err
        )
        for /f "usebackq" %%A in ('%~n0.err') do set errsize=%%~zA
        if .!errsize!.==.. set errsize=0
        if !errsize! gtr 0 (
          set msg=### FAILED TO EXECUTE ### !del_cmd! - replacement could be incompleted.
          type %~n0.err>>%log%
          echo !msg!
          echo !msg!>>%log%
        ) else (
          set copy_cmd=copy !sn! !tp!
          echo !copy_cmd!>>%log%
          cmd /c !copy_cmd! 1>>%log% 2>&1
        )
      )
    )
  )
)
del %~n0.tmp.vbs 2>nul

@rem #############################################################################################################
@rem #############################   C R E A T I N G    S Y S D B A    A C C O U N T  ############################
@rem #############################                        a n d                       ############################
@rem #############################   R E S T O R I N G     .c o n f    F I L E S      ############################
@rem #############################################################################################################

for /d %%s in ( %FB_SERVICES% ) do (
  for /f "tokens=3" %%k in ('REG.EXE query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\FirebirdServer%%s ^| findstr /i /c:"ImagePath"') do (
    set fn=%%k
    set fp=%%~dpk
    set fp=!fp:~0,-1!

    set cmd_run=!fp!\gsec -user sysdba -pass 1 -add sysdba -pw masterke -database !fp!\security3.fdb
    echo !cmd_run!>>%log%
    cmd /c !cmd_run! 1>%~n0.err 2>&1
    type %~n0.err
    type %~n0.err>>%log%
    del %~n0.err 2>nul

    set cmd_run=!fp!\gsec -display -database !fp!\security3.fdb
    echo !cmd_run!>>%log%
    cmd /c !cmd_run! 1>%~n0.err 2>&1
    type %~n0.err
    type %~n0.err>>%log%
    del %~n0.err 2>nul

    set msg=Restore files that was backed up before copying:
    echo !msg!
    echo !msg!>>%log%

    set cmd_run=copy !fp!\firebird.conf.previous !fp!\firebird.conf
    echo !cmd_run!>>%log%
    cmd /c !cmd_run! 1>>%log%

    set cmd_run=copy !fp!\databases.conf.previous !fp!\databases.conf
    echo !cmd_run!>>%log%
    cmd /c !cmd_run! 1>>%log%
  )
)

@rem #############################################################################################################
@rem ################################   S T A R T I N G     S E R V I C E S    ###################################
@rem #############################################################################################################
for /d %%s in ( %FB_SERVICES% ) do (
  set msg=Starting service FirebirdServer%%s
  echo !msg!
  echo.>>%log%
  echo !msg!>>%log%
  sc start FirebirdServer%%s 1>>%log% 2>&1
  ping -n 1 -w 800 1.1.1.1 1>nul 2>&1
  echo After pause:>>%log%
  sc query FirebirdServer%%s 1>>%log% 2>&1

  sc query FirebirdServer%%s | findstr /i /c:"RUNNING" 1>nul 2>&1
  if errorlevel 1 (
    set msg=CAN NOT START SERVICE %%s
  ) else (
    set msg=Service has been successfully started.
  )
  echo !msg!
  echo !msg!>>%log%

)

@rem #############################################################################################################
@rem ###########################   O B T A I N    S E R V E R    V E R S I O N S   ###############################
@rem #############################################################################################################
for /d %%s in ( %FB_SERVICES% ) do (
  for /f "tokens=3" %%k in ('REG.EXE query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\FirebirdServer%%s ^| findstr /i /c:"ImagePath"') do (
    set fn=%%k
    set fp=%%~dpk
    set fp=!fp:~0,-1!

    set cmd_svc=!fp!\fbsvcmgr localhost:service_mgr user SYSDBA password masterke info_server_version
    set msg=Trying to obtain server version for service %%s
    echo !msg!
    echo !msg!>>%log%
    echo !cmd_svc!>>%log%
    cmd /c !cmd_svc! 1>%~n0.err 2>&1
    type %~n0.err
    type %~n0.err>>%log%
    del %~n0.err 2>nul
  )
)

findstr /i /c:"FAILED TO EXECUTE" %log% 1>%~n0.err 2>nul
if errorlevel 1 (
  echo.
  echo No faults occured during replacement files.
) else (
  echo.
  echo ::: ACHTUNG :::
  echo.
  echo At least one file in some of target folders COULD NOT be replaced:
  type %~n0.err
)
del %~n0.err 2>nul
echo.
echo Check log in the file: %log%
echo.
goto end

:getFileDTS
  @rem http://www.dostips.com/DtTutoFunctions.php
    set vbs=%~n0.tmp.vbs
    set dts=%~n0.tmp.log
    if /i .%1.==.gen_vbs. (
      del %vbs% 2>nul
      echo 'Created auto, do NOT edit! >>%vbs%
      echo 'Used to obtain exact timestamp of file >>%vbs%
      echo 'Usage: cscript ^/^/nologo %vbs% ^<file^> >>%vbs%
      echo 'Result: last modified timestamp, in format: YYYYMMDDhhmiss >>%vbs%
      echo Set objFS ^= CreateObject("Scripting.FileSystemObject"^) >>%vbs%
      echo Set objArgs ^= WScript.Arguments >>%vbs%
      echo strFile ^= objArgs(0^) >>%vbs%
      echo ts ^= timeStamp(objFS.GetFile(strFile^).DateLastModified^) >>%vbs%
      echo WScript.Echo ts >>%vbs%
      echo. >>%vbs%
      echo Function timeStamp( d ^) >>%vbs%
      echo   timeStamp ^= Year(d^) ^& _ >>%vbs%
      echo   Right("0" ^& Month(d^),2^) ^& _ >>%vbs%
      echo   Right("0" ^& Day(d^),2^)  ^& _ >>%vbs% 
      echo   Right("0" ^& Hour(d^),2^) ^& _ >>%vbs%
      echo   Right("0" ^& Minute(d^),2^) ^& _ >>%vbs%
      echo   Right("0" ^& Second(d^),2^) >>%vbs%
      echo End Function >>%vbs%
      endlocal&goto:eof
    )
    if /i .%1.==.get_dts. (
      @rem echo|set /p=Obtaining timestamp of %2... 
      cscript //nologo %vbs% %2 1>%dts%
      @rem type %dts%
      @rem set /p %~3=<%dts%
    )
  endlocal
goto:eof


:end