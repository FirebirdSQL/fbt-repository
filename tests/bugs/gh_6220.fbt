{
'id': 'bugs.gh_6220',
'qmid': None,
'tracker_id': '',
'title': "Add way to retrieve statement BLR with Statement::getInfo and ISQL's SET EXEC_PATH_DISPLAY BLR",
'description':
 """
    https://github.com/FirebirdSQL/firebird/issues/6220

    Confirmed poor ratio between sysdba/non_dba time on 3.0.4.33054 (03-oct-2018): ratio was about 3.5 ... 4.0.
    Bug was fixed in 3.0.5, 11-nov-2018, build #33081 ( https://www.sql.ru/forum/actualutils.aspx?action=gotomsg&tid=1295388&msg=21800371 ).

    Recent FB versions have no problem, ratio is about 1.00 ... 1.1.
    This test currently uses threshold = 1.2 for alert if ratio become poor again.
    Problem can be preproduced if preparation of each DML rquires lot of work,
    for example - check access rights for many nested views before update underlying table.
    Number of DML which must be executed can be asjusted by value inserted into the SETTINGS table
    (see below, column 'iterations_count'; current value is 1000, execution time will be about 10s).

    Checked on:
        5.0.0.126 SS: 10.174s.
        4.0.1.2554 CS: 10.623s.
        3.0.8.33487 SS: 10.105s.
 """,
'min_versions': '3.0.5',
'versions': [
{
 'firebird_version': '3.0',
 'platform': 'All',
 'test_type': 'ISQL',
 'test_script':
  """
    set bail on;
    set list on;

    create or alter user tmp$gh_6220 password '123' using plugin Srp;
    recreate sequence g;
    create table test(id int primary key, x double precision);

    create view v_test01 as select * from test;
    create view v_test02 as select * from v_test01;
    create view v_test03 as select * from v_test02;
    create view v_test04 as select * from v_test03;
    create view v_test05 as select * from v_test04;
    create view v_test06 as select * from v_test05;
    create view v_test07 as select * from v_test06;
    create view v_test08 as select * from v_test07;
    create view v_test09 as select * from v_test08;
    create view v_test10 as select * from v_test09;
    create view v_test11 as select * from v_test10;
    create view v_test12 as select * from v_test11;
    create view v_test13 as select * from v_test12;
    create view v_test14 as select * from v_test13;
    create view v_test15 as select * from v_test14;
    create view v_test16 as select * from v_test15;
    create view v_test17 as select * from v_test16;
    create view v_test18 as select * from v_test17;
    create view v_test19 as select * from v_test18;
    create view v_test20 as select * from v_test19;
    create view v_test21 as select * from v_test20;
    create view v_test22 as select * from v_test21;
    create view v_test23 as select * from v_test22;
    create view v_test24 as select * from v_test23;
    create view v_test25 as select * from v_test24;
    create view v_test26 as select * from v_test25;
    create view v_test27 as select * from v_test26;
    create view v_test28 as select * from v_test27;
    create view v_test29 as select * from v_test28;
    create view v_test30 as select * from v_test29;
    create view v_test31 as select * from v_test30;
    create view v_test32 as select * from v_test31;
    create view v_test33 as select * from v_test32;
    create view v_test34 as select * from v_test33;
    create view v_test35 as select * from v_test34;
    create view v_test36 as select * from v_test35;
    create view v_test37 as select * from v_test36;
    create view v_test38 as select * from v_test37;
    create view v_test39 as select * from v_test38;
    create view v_test40 as select * from v_test39;
    create view v_test41 as select * from v_test40;
    create view v_test42 as select * from v_test41;
    create view v_test43 as select * from v_test42;
    create view v_test44 as select * from v_test43;
    create view v_test45 as select * from v_test44;
    create view v_test46 as select * from v_test45;
    create view v_test47 as select * from v_test46;
    create view v_test48 as select * from v_test47;
    create view v_test49 as select * from v_test48;
    create view v_test50 as select * from v_test49;

    create view v_test51 as select * from v_test50;
    create view v_test52 as select * from v_test51;
    create view v_test53 as select * from v_test52;
    create view v_test54 as select * from v_test53;
    create view v_test55 as select * from v_test54;
    create view v_test56 as select * from v_test55;
    create view v_test57 as select * from v_test56;
    create view v_test58 as select * from v_test57;
    create view v_test59 as select * from v_test58;
    create view v_test60 as select * from v_test59;
    create view v_test61 as select * from v_test60;
    create view v_test62 as select * from v_test61;
    create view v_test63 as select * from v_test62;
    create view v_test64 as select * from v_test63;
    create view v_test65 as select * from v_test64;
    create view v_test66 as select * from v_test65;
    create view v_test67 as select * from v_test66;
    create view v_test68 as select * from v_test67;
    create view v_test69 as select * from v_test68;
    create view v_test70 as select * from v_test69;
    create view v_test71 as select * from v_test70;
    create view v_test72 as select * from v_test71;
    create view v_test73 as select * from v_test72;
    create view v_test74 as select * from v_test73;
    create view v_test75 as select * from v_test74;
    create view v_test76 as select * from v_test75;
    create view v_test77 as select * from v_test76;
    create view v_test78 as select * from v_test77;
    create view v_test79 as select * from v_test78;
    create view v_test80 as select * from v_test79;
    create view v_test81 as select * from v_test80;
    create view v_test82 as select * from v_test81;
    create view v_test83 as select * from v_test82;
    create view v_test84 as select * from v_test83;
    create view v_test85 as select * from v_test84;
    create view v_test86 as select * from v_test85;
    create view v_test87 as select * from v_test86;
    create view v_test88 as select * from v_test87;
    create view v_test89 as select * from v_test88;
    create view v_test90 as select * from v_test89;
    create view v_test91 as select * from v_test90;
    create view v_test92 as select * from v_test91;
    create view v_test93 as select * from v_test92;
    create view v_test94 as select * from v_test93;
    create view v_test95 as select * from v_test94;
    create view v_test96 as select * from v_test95;
    create view v_test97 as select * from v_test96;
    create view v_test98 as select * from v_test97;
    create view v_test99 as select * from v_test98;
    commit;

    create table settings(iterations_count int);
    create table perf_log(whoami varchar(32) default current_user, elap_ms int);
    commit;

    set term ^;
    create procedure sp_run as
        declare t0 timestamp;
        declare n int;
        declare elap_ms int;
    begin

        select iterations_count from settings into n;
        t0 = 'now';

        while (n>0) do
        begin
            execute statement 'update v_test99 set x = ' || gen_id(g,1);
            n = n - 1;
        end
        
        insert into perf_log(elap_ms) values( datediff(millisecond from :t0 to cast('now' as timestamp)) );
    end
    ^
    set term ;^
    commit;

    grant select on settings to procedure sp_run;
    grant insert on perf_log to procedure sp_run;
    grant execute on procedure sp_run to tmp$gh_6220;
    grant select, update on v_test99 to tmp$gh_6220;
    grant usage on sequence g to tmp$gh_6220;
    commit;

    insert into v_test99(id,x) values(0,0);
    commit;

    -- ###############################################
    -- ###   N U M.   O F    I T E R A T I O N S   ###
    -- ###############################################
    insert into settings(iterations_count) values(1000);
    commit;


    connect '$(DSN)' user tmp$gh_6220 password '123';
    execute procedure sp_run;
    commit;
    
    connect '$(DSN)' user sysdba password 'masterkey';
    execute procedure sp_run;
    commit;

    drop user tmp$gh_6220 using plugin Srp;
    commit;

    select
        iif(elap_ratio < max_threshold, 'OK, acceptable.', 'POOR: ' || elap_ratio || ' - more than threshold = ' || max_threshold) as "Ratio (SYSDBA/NON_DBA):"
    from (
        select
            min(iif( whoami = 'SYSDBA', elap_ms, null))  as elap_sysdba
           ,min(iif( whoami <> 'SYSDBA', elap_ms, null)) as elap_nonsys
           ,1.00 * min(iif( whoami <> 'SYSDBA', elap_ms, null)) / min(iif( whoami = 'SYSDBA', elap_ms, null)) as elap_ratio
           ,1.2 as max_threshold
           -- ^
           -- |
           -- #################################################
           -- ###   T H R E S H O L D    F O R   A L E R T  ###
           -- #################################################
        from perf_log
    ) t;

  """,                                                      
 'expected_stdout': 
  """
    Ratio (SYSDBA/NON_DBA): OK, acceptable.
  """,
 'expected_stderr': 
  """
  """,
  'substitutions':[ ('[ \t]+',' ') ]
}
]
}
