{
'id': 'bugs.core_4977',
'qmid': None,
'tracker_id': 'CORE-4977',
'title': 'Detach of 3.x database from 3.x Linux client takes much longer than from 3.x Windows client',
'description': '',
'min_versions': '3.0',
'versions': [
{
 'firebird_version': '3.0',
 'platform': 'Windows',
 'test_type': 'Python',
 'test_script': 
"""\

# *** NOTE ***
# We measure APPROXIMATE time that is required for detaching from database by evaluating number of seconds that passed
# from UNIX standard epoch time inside ISQL and writing it to log. After returning control from ISQL we evaluate again
# that number by calling Python 'time.time()' - and it will return value upto current UTC time, i.e. it WILL take in
# account local timezone from OS settings (this is so at least on Windows). Thus we have to add/substract time shift
# between UTC and local time - this is done by 'time.timezone' summand.
# On PC-host with CPU 3.0 GHz and 2Gb RAM) in almost all cases difference was less than 1000 ms, so it was decided 
# to set threshold = 1200 ms.
# Tested on WI-V3.0.0.32140 (SS/SC/CC).
##########################################################################
# Test on LINUX was not done yet, so I've assign platform = 'Windows' yet.
##########################################################################

import os
import time
db_conn.close()

sqltxt='''set list on; select datediff(second from timestamp '01.01.1970 00:00:00.000' to current_timestamp) as " " from rdb$database;'''
sqllog=open( os.path.join(context['temp_directory'],'tmp_isql_4977.log'), 'w')
sqllog.close()
ms_before_detach=0
runProgram('isql',[dsn,'-user',user_name,'-pas',user_password,'-q','-o',sqllog.name],sqltxt)
with open( sqllog.name,'r') as f:
    for line in f:
        for word in line.split():
            ms_before_detach=int(word)
f.close()

detach_during_ms = int( (time.time() - ms_before_detach  - time.timezone) * 1000 )

############################################
###   d e f i n e    t h r e s h o l d   ###
############################################
threshold=1200

if detach_during_ms < threshold:
    print('Detach performed fast enough: less than %s ms' % threshold)
else:
    print('Detach lasted too long time: %s ms, threshold is %s ms' % (detach_during_ms, threshold) )

if os.path.isfile(sqllog.name):
    os.remove(sqllog.name)
""",
 'expected_stdout': 
  """
    Detach performed fast enough: less than 1200 ms
  """

}
]
}
