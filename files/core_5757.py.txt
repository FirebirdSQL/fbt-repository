#!/usr/bin/env python

##############   A C H T U N G   ###############
# 1. RUN THIS SCRIPT FOR AT LEAST 5-7 MINUTES.
# 2. DO NOT ADD IT TO COMMON FBT-REPO TESTS LIST.
# 3. USE VALUE OF SCOPR 400...500 AS NUMBER OF THREADS.
################################################

# Run sample: python <this_script> localhost:employee /opt/fb30/lib/libfbclient.so.2 400
# NOTE-1: it is possible that one need to wait not less than several minutes before 1st error appear.
# NOTE-2: it is recommended to run this script on machine with single FB client library file (POSIX)

import sys
import fdb
import threading
from datetime import datetime

DB_NAME=sys.argv[1] # dsn = 'localhost:e40'
# c=fdb.connect(dsn='localhost:employee', fb_library_name='/opt/fb30/lib/libfbclient.so.2', user='SYSDBA', password='masterkey')
NUM_OF_THREADS = int(sys.argv[2])

FB_CLIB=None
if len(sys.argv)>3:
    FB_CLIB=sys.argv[3] # /opt/fb30/lib/libfbclient.so.2

class workthread(threading.Thread):
    def __init__(self, number):
        threading.Thread.__init__(self)
        self._number = number

    def run(self):
        for i in xrange(1000):
            print( "%s. Thread %d iteration %d" % ( str( datetime.now().time() )[:12], self._number, i) )

            if FB_CLIB:
                con = fdb.connect( dsn = DB_NAME, user='SYSDBA', password='masterkey', fb_library_name = FB_CLIB  )
            else:
                con = fdb.connect( dsn = DB_NAME, user='SYSDBA', password='masterkey' )

            with con.event_conduit(('event_name',)) as conduit:
                actual = conduit.wait(timeout=0.1)
            #del con
            con.close()

print( 'Perform attempt to establish connection to specified database.')
if FB_CLIB:
    con_chk = fdb.connect( dsn = DB_NAME, user='SYSDBA', password='masterkey', fb_library_name = FB_CLIB )
else:
    con_chk = fdb.connect( dsn = DB_NAME, user='SYSDBA', password='masterkey' )
print( con_chk.firebird_version )
con_chk.close()
print('Done successfully. Close check connection. Now we may to start main loop and launch %d threads.' % NUM_OF_THREADS )

threads = []
for i in xrange( NUM_OF_THREADS ):
    t = workthread(i)
    threads.append(t)
    t.start()

for t in threads:
    t.join()

