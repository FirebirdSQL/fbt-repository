{
'id': 'bugs.core_6542',
'qmid': '',
'tracker_id': 'CORE-6542',
'title': "Implementation of SUBSTRING for UTF8 character set is inefficient",
'description':
  """
    Confirmed issues on 4.0.0.2422 and 3.0.8.33345: ratio is about 16x ... 17x.
    Checked on 4.0.0.2425 and 3.0.8.33349: ratio is about 1.05 ... 1.07.
    Decided to use threshold = 1.15 for check performance ratio.

    01.05.2021: INCREASED THRESHOLD from 1.15 to 1.30 because test failed several times, both on Linux and Windows.

    ::: NB ::: 
    SUBSTRING remains most problematic from performance POV.
    Ratio TIME_UTF8 / TIME_UFSS  for other string functions (checked on 4.0.0.2448):
        right(..., 10):      0.4;  right(..., 8000):  0.4
        left(...,10):        1.14;  left(..., 8000):   0.3
        reverse():           0.7
        upper() / lower():   0.576 ... 0.635
        position():          0.5
        trim():              0.35
        octet_length():      1.00
        char_length():       0.632
        bit_length():        1.00
        ascii_val():         1.00
        hash():              1.00
        overlay():           0.31
        replace():           0.5
        lpad()/rpad():       0.73
  """,
'min_versions': '3.0.8',
'versions': [
{
 'firebird_version': '3.0',
 'platform': 'All',
 'init_script':
  """
  """,
 'test_type': 'ISQL',
 'test_script':
  """
    set term ^;
    execute block as
        declare str1 varchar(8000) character set unicode_fss;
        declare str2 varchar(10) character set unicode_fss;
        declare n int = 100000;
        declare t0 timestamp;
        declare t1 timestamp;
    begin
        str1 = LPAD('abcd', 8000, '--');
        t0 = 'now';
        while (n > 0) do
        begin
            str2 = SUBSTRING(str1 from 1 FOR 10);
            n = n - 1;
        end
        t1 = 'now';
        rdb$set_context('USER_SESSION', 'TIME_UFSS', datediff(millisecond from t0 to t1) );
    end
    ^
    execute block as
        declare str1 varchar(8000) character set utf8;
        declare str2 varchar(10) character set utf8;
        declare n int = 100000;
        declare t0 timestamp;
        declare t1 timestamp;
    begin
        str1 = LPAD('abcd', 8000, '--');
        t0 = 'now';
        while (n > 0) do
        begin
            str2 = SUBSTRING(str1 from 1 FOR 10);
            n = n - 1;
        end
        t1 = 'now';
        rdb$set_context('USER_SESSION', 'TIME_UTF8', datediff(millisecond from t0 to t1) );
    end
    ^
    set term ;^

    set list on;
    select iif( r < threshold, 'acceptable.', 'POOR: ' || r || ' - exceeds threshold = ' || threshold) as "UTF8_substring_performance:"
    from (
        select
            1.000 * cast( rdb$get_context('USER_SESSION', 'TIME_UTF8') as int) / cast( rdb$get_context('USER_SESSION', 'TIME_UFSS') as int) as r
           ,1.30 as threshold
         -- ^^^^
         -- #########################
         -- ### T H R E S H O L D ###
         -- #########################
        from rdb$database
    );

  """,
 'expected_stdout':
  """
    UTF8_substring_performance:     acceptable.
  """,
 'expected_stderr':
  """
  """
}
]
}
