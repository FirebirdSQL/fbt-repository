{
'id': 'bugs.core_5194',
'qmid': None,
'tracker_id': 'CORE-5194',
'title': " Invalid computed by definition generated by isql -x",
'description': 
 """
   We create table and then run ISQL with '-x' key and saving its output to file.
   This operation should NOT produce any error (see var. 'f_xmeta_err').
   Then we drop table and run ISQL again but for APPLYING extracted metadata.    
   If "ISQL -x" will produce script with invalid syntax, compiler will raise error.
   Test checks that:
   1) table is recreated successfully and consists of the same fields as before;
   2) compiler STDERR (see var. 'f_apply_err') is empty.
   Confirmed:
   1) wrong metadata generation on 4.0.0.130
   2) works fine on 4.0.0.132, 3.0.0.32474
 """,
'min_versions': '3.0',
'versions': [
{
 'firebird_version': '3.0',
 'platform': 'All',
 'test_type': 'Python',
 'test_script':"""\
import os
import subprocess
from subprocess import Popen
os.environ["ISC_USER"] = user_name
os.environ["ISC_PASSWORD"] = user_password

sql_ddl='''recreate table test( a timestamp, b computed by (current_timestamp - a) );'''

db_conn.close()

f_init_sql = open( os.path.join(context['temp_directory'],'tmp_init_5194.sql'), 'w')
f_init_sql.write(sql_ddl)
f_init_sql.close()

f_init_log = open( os.path.join(context['temp_directory'],'tmp_init_5194.log'), 'w')

subprocess.call( ["isql", dsn, "-i", f_init_sql.name],
                 stdout = f_init_log,
                 stderr = subprocess.STDOUT
               )
# This file should be empty:
f_init_log.close()

f_xmeta_log = open( os.path.join(context['temp_directory'],'tmp_xmeta_5194.log'), 'w')
f_xmeta_err = open( os.path.join(context['temp_directory'],'tmp_xmeta_5194.err'), 'w')

subprocess.call( ["isql", dsn, "-x"],
                 stdout = f_xmeta_log,
                 stderr = f_xmeta_err
               )

# This file should contain metadata - table TEST definition with its COMPUTED BY column 'B':
f_xmeta_log.close()

# This file should be empty:
f_xmeta_err.close()

att1 = kdb.connect(dsn=dsn.encode())
cur1=att1.cursor()
cur1.execute("drop table test")
att1.commit()
att1.close()

# This should issue "There is no table TEST in this database":
#runProgram('isql',[dsn, '-q','-user',user_name,'-pas',user_password],'show table test;')

f_apply_log = open( os.path.join(context['temp_directory'],'tmp_apply_5194.log'), 'w')
f_apply_err = open( os.path.join(context['temp_directory'],'tmp_apply_5194.err'), 'w')
subprocess.call( ["isql", dsn, "-i", f_xmeta_log.name],
                 stdout = f_apply_log,
                 stderr = f_apply_err
               )
# Both of these files should be empty:
f_apply_log.close()
f_apply_err.close()

# This should issue DDL of table TEST which was just created by extracted metadata:
table_ddl='''
set list on;
select
    rf.rdb$field_name
    ,ff.rdb$field_length
    ,ff.rdb$field_scale
    ,ff.rdb$field_type
    ,cast(ff.rdb$computed_source as varchar(100)) as rdb$computed_source
from rdb$relation_fields rf
join rdb$fields ff on rf.rdb$field_source = ff.rdb$field_name
where rf.rdb$relation_name='TEST'
order by rdb$field_name;
'''
runProgram('isql',[dsn, '-q'],table_ddl)

# No output should be here:
with open( f_xmeta_err.name,'r') as f:
    print(f.read())
f.close()

# No output should be here:
with open( f_apply_log.name,'r') as f:
    print(f.read())
f.close()

# No output should be here:
with open( f_apply_err.name,'r') as f:
    for line in f:
        print( "APPLY_METADATA_STDERR: "+line )
f.close()

################################################
# Cleanup

f_list=[]
f_list.append(f_init_sql)
f_list.append(f_init_log)

f_list.append(f_xmeta_log)
f_list.append(f_xmeta_err)

f_list.append(f_apply_log)
f_list.append(f_apply_err)

for i in range(len(f_list)):
    if os.path.isfile(f_list[i].name):
        os.remove(f_list[i].name)

  """,
 'expected_stdout':
  """
    RDB$FIELD_NAME                  A
    RDB$FIELD_LENGTH                8
    RDB$FIELD_SCALE                 0
    RDB$FIELD_TYPE                  35
    RDB$COMPUTED_SOURCE             <null>
    RDB$FIELD_NAME                  B
    RDB$FIELD_LENGTH                8
    RDB$FIELD_SCALE                 -9
    RDB$FIELD_TYPE                  16
    RDB$COMPUTED_SOURCE             (current_timestamp - a)
  """,
 'expected_stderr':
  """
  """,
  'substitutions':[('.* line \d+ .*','')]
}
]
}
