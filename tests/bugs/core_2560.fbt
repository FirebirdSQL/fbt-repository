{
'id': 'bugs.core_2560',
'qmid': None,
'tracker_id': 'CORE-2560',
'title': 'Maximum and minimum identifier length should be enforced by DSQL',
'description': 
  """
  """,
'min_versions': '3.0',
'versions': [
{
 'firebird_version': '3.0',
 'platform': 'All',
 'test_type': 'ISQL',
 'test_script': 
  """
    --set echo on;
    select 1 as cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
    from rdb$database order by cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc;

    select 1 from rdb$database dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
    where dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd.rdb$relation_id > 10;

    savepoint zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;

    create role rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr;
    create sequence gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg;

    create collation uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu for iso8859_1;

    create user zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz password 'q';

    savepoint "";
    rollback to "";

    create role "";
    grant select on t1 to role "";
    grant "" to public;
    drop role "";

    create user "" password 'q';
    create user tmp$c2560 password '';

    create sequence "";
    create domain "" int;
    create exception "" as '@1';
    create view "" as select 1 from rdb$database;
    create table ""(x int);
    create table tx("" int);
    create procedure "" as begin end;
    create procedure p("" int) as begin end;
    set term ^; 
    create function "" returns int as begin return 1; end
    ^
    recreate package "" as
    begin
    function pg_func(a int) returns bigint;
    end
    ^
    create package body "" as
    begin
    function pg_func(a int) returns bigint as
    begin
    return a * a;
    end
    end
    recreate package pg_test as
    begin
    function ""(a int) returns bigint;
    end
    ^
    create package body pg_test as
    begin
    function ""(a int) returns bigint as
    begin
    return a * a;
    end
    end
    ^
    execute block returns("" int) as
    begin
    "" = 1;
    suspend;
    end
    ^
    set term ^;

  """,
 'expected_stdout': 
  """
  """,
 'expected_stderr': 
  """
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Name longer than database column size
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Name longer than database column size
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Name longer than database column size
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Name longer than database column size
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Name longer than database column size
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Name longer than database column size
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Name longer than database column size
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    unsuccessful metadata update
    -CREATE USER TMP$C2560 failed
    -Password should not be empty string
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
    Statement failed, SQLSTATE = 42000
    Dynamic SQL Error
    -SQL error code = -104
    -Zero length identifiers are not allowed
  """
}
]
}
