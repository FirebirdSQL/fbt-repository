{
'id': 'bugs.core_6504',
'qmid': None,
'tracker_id': '',
'title': 'Provide same results for date arithmetics when date is changed by values near +/-max(bigint)',
'description':
 """
    Checked on 4.0.0.2437 (both on Linux and Windows).
 """,
'min_versions': '4.0',
'versions': [
{
 'firebird_version': '4.0',
 'platform': 'All',
 'test_type': 'ISQL',
 'test_script':
  """
    set heading off;

    -- All following statements must raise SQLSTATE = 22008.
    -- On LINUX builds before 4.0.0.2437 statements NN 5 and 6
    -- did not raise error. Instead, they issued date = 2020-02-01:

    select 1 as chk_1, date '01.02.2020' +  9223372036854775807 from rdb$database;
    select 2 as chk_2, date '01.02.2020' + -9223372036854775807 from rdb$database;
    select 3 as chk_3, date '01.02.2020' -  9223372036854775807 from rdb$database;
    select 4 as chk_4, date '01.02.2020' - -9223372036854775807 from rdb$database;
    select 5 as chk_5, date '01.02.2020' + -9223372036854775808 from rdb$database;
    select 6 as chk_6, date '01.02.2020' - -9223372036854775808 from rdb$database;
  """,
 'expected_stdout': 
  """
  """,
 'expected_stderr': 
  """
    Statement failed, SQLSTATE = 22008
    value exceeds the range for valid dates

    Statement failed, SQLSTATE = 22008
    value exceeds the range for valid dates

    Statement failed, SQLSTATE = 22008
    value exceeds the range for valid dates

    Statement failed, SQLSTATE = 22008
    value exceeds the range for valid dates

    Statement failed, SQLSTATE = 22008
    value exceeds the range for valid dates

    Statement failed, SQLSTATE = 22008
    value exceeds the range for valid dates
  """
}
]
}
