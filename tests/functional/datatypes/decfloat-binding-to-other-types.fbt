{
'id': 'functional.datatypes.decfloat-binding-to-other-types',
'qmid': None,
'tracker_id': '',
'title': 
 """
   Test ability for DECFLOAT values to be represented as other data types (char, double, bigint).
 """,
'description': 
 """
    See CORE-5535 and doc\sql.extensions\README.data_types:
    ---
    SET DECFLOAT BIND <bind-type> - controls how are DECFLOAT values represented in outer
    world (i.e. in messages or in XSQLDA). Valid binding types are: NATIVE (use IEEE754
    binary representation), CHAR/CHARACTER (use ASCII string), DOUBLE PRECISION (use
    8-byte FP representation - same as used for DOUBLE PRECISION fields) or BIGINT
    with possible comma-separated SCALE clause (i.e. 'BIGINT, 3').
    ---
    FB40SS, build 4.0.0.651: OK, 0.921s.

    ::: NB ::::
    Temply deferred check of "set decfloat bind bigint, 3" when value has at least one digit in floating part.
    Also, one need to check case when we try to bind to BIGINT value that is too big for it (say, more than 19 digits).
    Waiting for reply from Alex, letters 25.05.2017 21:12 & 21:22.


    10.12.2019. Updated syntax for SET BIND command because it was changed in 11-nov-2019. 
    Replaced 'bigint,3' with numeric(18,3) - can not specify scale using comma delimiter, i.e. ",3"
    Checked on: WI-T4.0.0.1685.

    27.12.2019. Updated expected_stdout after discuss with Alex: subtype now must be zero in all cases.
    Checked on: WI-T4.0.0.1710.
 """,
'min_versions': '4.0.0',
'versions': [
{
 'firebird_version': '4.0',
 'platform': 'All',
 'test_type': 'ISQL',
 'test_script': 
  """
    set list on;
    set sqlda_display on;

    -- set decfloat bind char;
    set bind of decfloat to char;
    select 
        123456789012345678901234567890.1234
    from rdb$database;

    -- set decfloat bind double precision;
    set bind of decfloat to double precision;
    select 
        123456789012345678901234567890.1234
    from rdb$database;

    -- set decfloat bind bigint;
    set bind of decfloat to bigint;
    select 
        1234567890123456789.1234
    from rdb$database;

    -- set decfloat bind bigint, 0;
    set bind of decfloat to numeric(18,0);
    select 
        1234567890123456789.1234
    from rdb$database;


    -- Alex' samples, letter 25.05.2017 21:56
    -- set decfloat bind bigint, 3;
    set bind of decfloat to numeric(18,3);
    select cast(1234.5678 as decfloat(16)) from rdb$database; -- 1234.568


    -- set decfloat bind bigint, 8;
    set bind of decfloat to numeric(18,8);
    select cast(1234.5678 as decfloat(16)) from rdb$database; -- 1234.56780000

  """,
  'expected_stdout':
  """
    INPUT message field count: 0

    OUTPUT message field count: 1
    01: sqltype: 32752 NUMERIC(38) scale: -4 subtype: 2 len: 16
      :  name: CONSTANT  alias: CONSTANT
      : table:   owner: 

    CONSTANT                                  123456789012345678901234567890.1234



    INPUT message field count: 0

    OUTPUT message field count: 1
    01: sqltype: 32752 NUMERIC(38) scale: -4 subtype: 2 len: 16
      :  name: CONSTANT  alias: CONSTANT
      : table:   owner: 

    CONSTANT                                  123456789012345678901234567890.1234



    INPUT message field count: 0

    OUTPUT message field count: 1
    01: sqltype: 32752 NUMERIC(38) scale: -4 subtype: 2 len: 16
      :  name: CONSTANT  alias: CONSTANT
      : table:   owner: 

    CONSTANT                                             1234567890123456789.1234



    INPUT message field count: 0

    OUTPUT message field count: 1
    01: sqltype: 32752 NUMERIC(38) scale: -4 subtype: 2 len: 16
      :  name: CONSTANT  alias: CONSTANT
      : table:   owner: 

    CONSTANT                                             1234567890123456789.1234



    INPUT message field count: 0

    OUTPUT message field count: 1
    01: sqltype: 580 INT64 scale: -3 subtype: 1 len: 8
      :  name: CAST  alias: CAST
      : table:   owner: 

    CAST                            1234.568



    INPUT message field count: 0

    OUTPUT message field count: 1
    01: sqltype: 580 INT64 scale: -8 subtype: 1 len: 8
      :  name: CAST  alias: CAST
      : table:   owner: 

    CAST                            1234.56780000
  """,
  'expected_stderr':
  """
  """
}
]
}
