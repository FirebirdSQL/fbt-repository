{
'id': 'bugs.core_4964',
'qmid': None,
'tracker_id': 'CORE-4964',
'title': 'Real errors during connect to security database are hidden by Srp user manager. Errors should be logged no matter what AuthServer is used.',
'description': 
 """
   Test obtains full path to $fb_home via FBSVCMGR info_get_env.
   Then it makes copy of file 'databases.conf' that is in $fb_home directory because 
   following lines will be added to that 'databases.conf':
   ===
   tmp_alias_4964 = ...
   {
       SecurityDatabase = $(dir_conf)/firebird.msg
   }
   ===
   NB: we intentionally put reference to file that for sure does exist but is INVALID for usage as fdb: 'firebird.msg'

   Then we:
   1) obtain content of server firebird.log
   2) try to make connect to alias 'tmp_alias_4964' and (as expected) get error.
   3) wait a little and obtain again content of server firebird.log

   Finally we restore original databases.conf and check that:
   1) Client error message contains phrase about need to check server firebird.log for details.
   2) Difference of firebird.log contains messages that engine could not attach to password database 
      because it is invalid (we specify 'firebird.msg' as security_db in databases.conf for test database, 
      and of course this is not valid database)

   Checked for:
      FB30SS, build 3.0.4.32972: OK, 3.360s.
      FB40SS, build 4.0.0.977: OK, 3.485s.
 """,
'min_versions': '3.0',
'versions': [
{
 'firebird_version': '3.0',
 'platform': 'All',
 'init_script': 
  """
  """,
 'test_type': 'Python',
 'test_script':"""\

import os
import subprocess
from subprocess import Popen
import difflib
import datetime
import time
import shutil
import re

os.environ["ISC_USER"] = user_name
os.environ["ISC_PASSWORD"] = user_password

db_conn.close()


def svc_get_fb_log( f_fb_log ):

  global subprocess

  subprocess.call( [ "fbsvcmgr",
                     "localhost:service_mgr",
                     "action_get_fb_log"
                   ],
                   stdout=f_fb_log, stderr=subprocess.STDOUT
                 )
  return


f_svc_log=open( os.path.join(context['temp_directory'],'tmp_svc_4964.log'), 'w')
subprocess.call([ "fbsvcmgr", "localhost:service_mgr", "info_get_env"], stdout=f_svc_log, stderr=subprocess.STDOUT)
f_svc_log.close()

# Result: f_svc_log contains line like this:
# Server root: C:\1INSTALL\FIREBIRD\fb30sS\
# NB: though it is unlikely, but path can contain spaces!

fb_home=''
with open( f_svc_log.name,'r') as f:
    for line in f:
        i=1
        for word in line.split():
            if i > 2:
                fb_home = fb_home + word + ' '
            i=i+1
        break
fb_home = fb_home.strip()

# Resut: fb_home is full path to FB instance home (with trailing slash).

dts = datetime.datetime.now().strftime("%y%m%d_%H%M%S")
dbconf_bak = fb_home+'databases_'+dts+'.bak'
fbconf_bak = fb_home+'firebird_'+dts+'.bak'

shutil.copy2( fb_home+'databases.conf', dbconf_bak )
shutil.copy2( fb_home+'firebird.conf', fbconf_bak )

tmp_fdb=os.path.join(context['temp_directory'],'tmp_4964.fdb')

f_dbconf=open(fb_home+'databases.conf','a')
f_dbconf.seek(0, 2)
f_dbconf.write("\\n\\n# Temporarily added by fbtest, CORE-4964. Should be removed auto:")
f_dbconf.write("\\n#" + '='*60 )
f_dbconf.write("\\ntmp_alias_4964_"+dts+" = " + tmp_fdb )
f_dbconf.write("\\n{\\n  SecurityDatabase = $(dir_conf)/firebird.msg\\n}")
f_dbconf.write("\\n#" + '='*60 )
f_dbconf.close()


f_fbconf=open(fb_home+'firebird.conf','r')
fbconf_content=f_fbconf.readlines()
f_fbconf.close()
for i,s in enumerate( fbconf_content ):
    if s.lower().lstrip().startswith( 'wirecrypt'.lower() ):
        fbconf_content[i] = '# <temply commented> ' + s

fbconf_content.append('\\n# Temporarily added by fbtest, CORE-4964. Should be removed auto:')
fbconf_content.append("\\n#" + '='*30 )
fbconf_content.append('\\nWireCrypt = Disabled')
fbconf_content.append("\\n#" + '='*30 )

f_fbconf=open(fb_home+'firebird.conf','w')
f_fbconf.writelines( fbconf_content )
f_fbconf.close()


f_fblog_before=open( os.path.join(context['temp_directory'],'tmp_4964_fblog_before.txt'), 'w')
svc_get_fb_log( f_fblog_before )
f_fblog_before.close()


f_connect_log=open( os.path.join(context['temp_directory'],'tmp_connect_4964.log'), 'w')

try:
   con1=fdb.connect( dsn = 'localhost:tmp_alias_4964_'+dts, user = 'SYSDBA', password = 'masterkey' )
   f_connect_log.write( con1.firebird_version )
   con1.close()
except Exception,e:
    for x in e:
        f_connect_log.write( repr(x)+'\\n' )

f_connect_log.close()
time.sleep(1)

f_fblog_after=open( os.path.join(context['temp_directory'],'tmp_4964_fblog_after.txt'), 'w')
svc_get_fb_log( f_fblog_after )
f_fblog_after.close()


# RESTORE original config:
##########################
shutil.copy2( dbconf_bak, fb_home+'databases.conf' )
shutil.copy2( fbconf_bak , fb_home+'firebird.conf')

with open( f_connect_log.name,'r') as f:
    for line in f:
        print( 'CLIENT_MSG: ' + line.upper() )


# Compare firebird.log versions BEFORE and AFTER this test:
######################

oldfb=open(f_fblog_before.name, 'r')
newfb=open(f_fblog_after.name, 'r')

difftext = ''.join(difflib.unified_diff(
    oldfb.readlines(), 
    newfb.readlines()
  ))
oldfb.close()
newfb.close()

f_diff_txt=open( os.path.join(context['temp_directory'],'tmp_4964_diff.txt'), 'w')
f_diff_txt.write(difftext)
f_diff_txt.close()


#CSPROG	Tue May 15 08:25:25 2018
#	Authentication error
#	cannot attach to password database
#	Error in isc_attach_database() API call when working with legacy security database
#	file C:\MIX\FIREBIRD\FB40\FIREBIRD.MSG is not a valid database

allowed_patterns = (
     re.compile('cannot\s+attach\s+to\s+password+\s+database\.*', re.IGNORECASE)
    ,re.compile('error\s+in\s+isc_attach_database\(\)\s+API\.*', re.IGNORECASE)
    ,re.compile('file\s+.*\s+is\s+not\s+a\s+valid\s+database\.*', re.IGNORECASE)
)

with open( f_diff_txt.name,'r') as f:
    for line in f:
        if line.startswith('+'):
            match2some = filter( None, [ p.search(line) for p in allowed_patterns ] )
            if match2some:
                print( 'DIFF IN FIREBIRD.LOG: ' + (' '.join(line.split()).upper()) )



#####################################################################
# Cleanup:

# do NOT remove this pause otherwise some of logs will not be enable for deletion and test will finish with 
# Exception raised while executing Python test script. exception: WindowsError: 32
time.sleep(1)

f_list=( 
     f_svc_log
    ,f_connect_log
    ,f_diff_txt
    ,f_fblog_before
    ,f_fblog_after
)

for i in range(len(f_list)):
    if os.path.isfile(f_list[i].name):
        os.remove(f_list[i].name)
os.remove(dbconf_bak)
os.remove(fbconf_bak)
  """,
 'expected_stdout':
  """
    CLIENT_MSG: 'ERROR WHILE CONNECTING TO DATABASE:\N- SQLCODE: -902\N- ERROR OCCURRED DURING LOGIN, PLEASE CHECK SERVER FIREBIRD.LOG FOR DETAILS'
    CLIENT_MSG: -902
    CLIENT_MSG: 335545106
    DIFF IN FIREBIRD.LOG: + CANNOT ATTACH TO PASSWORD DATABASE
    DIFF IN FIREBIRD.LOG: + ERROR IN ISC_ATTACH_DATABASE() API CALL WHEN WORKING WITH LEGACY SECURITY DATABASE
    DIFF IN FIREBIRD.LOG: + FILE C:\MIX\FIREBIRDSDSDD\FB40\FIREBIRD.MSG IS NOT A VALID DATABASE
  """,
 'expected_stderr':
  """
  """,  
  'substitutions': [('DIFF IN FIREBIRD.LOG: \+ FILE .* IS NOT A VALID DATABASE', 'DIFF IN FIREBIRD.LOG: \+ FILE IS NOT A VALID DATABASE')]
}
]
}
