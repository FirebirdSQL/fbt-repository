{
'id': 'bugs.core_5618',
'qmid': None,
'tracker_id': 'CORE-5618',
'title': 'Part of the pages of the second level blobs is not released when deleting relations.',
'description': 
 """
    We create table with blob field and write into it binary data with length that 
    is too big to store such blob as level-0 and level-1. Filling is implemented as
    specified in:
        http://pythonhosted.org/fdb/differences-from-kdb.html#stream-blobs
    Then we drop table and close connection.
    Finally, we obtain firebird.log, run full validation (like 'gfix -v -full' does) and get firebird.log again.
    Comparison of two firebird.log versions should give only one difference related to warnings, and they count 
    must be equal to 0.

    Reproduced on 3.0.3.32837, got lot of warnings in firebird.log when did usual validation ('gfix -v -full ...')
    Checked on:
        30SS, build 3.0.3.32856: OK, 4.047s.
        40SS, build 4.0.0.834: OK, 8.266s.
 """,
'min_versions': '3.0.3',
'versions': [
{
 'firebird_version': '3.0',
 'platform': 'All',
 'page_size': '4096',
 'init_script': 
  """
      recreate table test(b blob sub_type 0);
  """,
 'test_type': 'Python',
 'test_script':"""\

import os
import subprocess
import zipfile
import difflib
import time

db_conn.close()

def svc_get_fb_log( f_fb_log ):

  import subprocess

  subprocess.call([ "fbsvcmgr",
                    "localhost:service_mgr",
                    "action_get_fb_log"
                  ],
                   stdout=f_fb_log, stderr=subprocess.STDOUT
                 )
  return


#####################################################################
# Move database to FW = OFF in order to increase speed of insertions and output its header info:

fwoff_log=open( os.path.join(context['temp_directory'],'tmp_fw_off_5618.log'), 'w')
subprocess.call( [ "fbsvcmgr", "localhost:service_mgr",
                   "action_properties",
                   "prp_write_mode", "prp_wm_async",
                   "dbname", "$(DATABASE_LOCATION)bugs.core_5618.fdb" 
                 ],
                 stdout=fwoff_log, 
                 stderr=subprocess.STDOUT
               )
fwoff_log.close()

zf = zipfile.ZipFile( os.path.join(context['files_location'],'core_5618.zip') )
blob_src = 'core_5618.bin'
zf.extract( blob_src, '$(DATABASE_LOCATION)')
zf.close()

con1 = fdb.connect(dsn = dsn)

cur1=con1.cursor()
blob_src = ''.join( ('$(DATABASE_LOCATION)', blob_src) )

blob_handle = open( blob_src, 'rb')
cur1.execute('insert into test(b) values(?)',[blob_handle])
blob_handle.close()

cur1.close()
con1.execute_immediate('drop table test');
con1.commit()
con1.close()


f_fblog_before=open( os.path.join(context['temp_directory'],'tmp_4337_fblog_before.txt'), 'w')
svc_get_fb_log( f_fblog_before )
f_fblog_before.close()


##########################################################
# Run full validation (this is what 'gfix -v -full' does):

val_log=open( os.path.join(context['temp_directory'],'tmp_onval_5618.log'), 'w')

subprocess.call( ["fbsvcmgr", "localhost:service_mgr",
                  "action_repair", 
                  "rpr_validate_db",
                  "rpr_full",
                  "dbname","$(DATABASE_LOCATION)bugs.core_5618.fdb"
                 ],
                 stdout=val_log, 
                 stderr=subprocess.STDOUT
               )

val_log.close()


# Get content of firebird.log AFTER test finish.
#############################

f_fblog_after=open( os.path.join(context['temp_directory'],'tmp_4337_fblog_after.txt'), 'w')
svc_get_fb_log( f_fblog_after )
f_fblog_after.close()


# Compare firebird.log versions BEFORE and AFTER this test:
######################

oldfb=open(f_fblog_before.name, 'r')
newfb=open(f_fblog_after.name, 'r')

difftext = ''.join(difflib.unified_diff(
    oldfb.readlines(), 
    newfb.readlines()
  ))
oldfb.close()
newfb.close()

f_diff_txt=open( os.path.join(context['temp_directory'],'tmp_4337_diff.txt'), 'w')
f_diff_txt.write(difftext)
f_diff_txt.close()


with open( f_diff_txt.name,'r') as f:
    for line in f:
        if line.startswith('+') and 'warning'.upper() in line.upper():
                print( 'DIFF IN FIREBIRD.LOG: ' + (' '.join(line.split()).upper()) )
f.close()

with open( fwoff_log.name,'r') as f:
    for line in f:
        print(  ''.join( ('Unexpected line in ', fwoff_log.name, ':', line ) ) )

with open( val_log.name,'r') as f:
    for line in f:
        print(  ''.join( ('Unexpected line in ', val_log.name, ':', line ) ) )


# Cleanup:
##########
time.sleep(1)
f_list = (f_fblog_before, f_fblog_after, f_diff_txt, val_log, blob_handle, fwoff_log)

for i in range(len(f_list)):
    if os.path.isfile(f_list[i].name):
        os.remove(f_list[i].name)

  """,
 'expected_stdout':
  """
    DIFF IN FIREBIRD.LOG: + VALIDATION FINISHED: 0 ERRORS, 0 WARNINGS, 0 FIXED
  """,
 'expected_stderr':
  """
  """
}
]
}
