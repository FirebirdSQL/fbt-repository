{
'id': 'functional.datatypes.alter-session-reset',
'qmid': None,
'tracker_id': '',
'title': 
 """
   Test results of ALTER SESSION RESET
 """,
'description': 
 """
    Checked on FB40SS, build 4.0.0.1166: OK, 4.329s.
 """,
'min_versions': '4.0.0',
'versions': [
{
 'firebird_version': '4.0',
 'platform': 'All',
 'test_type': 'ISQL',
 'test_script': 
  """
    --set bail on;
    --set wng off;
    set list on;
    --set echo on;
    --connect 'localhost:e40' user sysdba password 'masterkey';
    set autoddl off;
    commit;

    create or alter user tmp$user4test password 'bar';
    commit;
    recreate table fix_test(id int, x int);
    recreate global temporary table gtt_test(id int, x int) on commit preserve rows;
    commit;

    set term ^;
    execute block as
    begin
        begin
            execute statement 'drop role acnt';
        when any do begin end
        end
        begin
            execute statement 'drop role boss';
        when any do begin end
        end
    end
    ^
    create or alter procedure sp_decfloat_test returns( raised_gds int, raised_sqlst char(5) ) as
        declare a1 decfloat(34) = 9e6144;
    begin
        begin
            a1 = a1 + a1;
            when any do
            begin
                exception;
                raised_gds = gdscode;
                raised_sqlst = sqlstate;
            end
        end
        suspend;
    end
    ^
    set term ;^
    commit;

    create role acnt;
    create role boss;
    commit;
    grant acnt to tmp$user4test;
    grant boss to tmp$user4test;
    grant execute on procedure sp_decfloat_test to tmp$user4test;
    commit;

    grant select, insert, update, delete on gtt_test to boss;
    grant select, insert, update, delete on fix_test to boss;
    commit;

    recreate view v_info as
    select 
        -- current_connection as my_conn
        --,current_transaction as my_tran
         current_user as my_name
        ,current_role as my_role
        ,mon$isolation_mode as tx_isol_mode
        ,mon$lock_timeout as tx_lock_timeout
        ,mon$read_only as tx_read_only
        ,mon$auto_undo as tx_auto_undo
    from mon$transactions t 
    where t.mon$attachment_id = current_connection;
    commit;

    grant select on v_info to public;
    commit;

    --connect 'localhost:e40' user tmp$user4test password 'bar' role 'acnt';
    connect '$(DSN)' user tmp$user4test password 'bar' role 'acnt';

    ------------------ 1: change Tx attributes ----------
    commit;
    set transaction read only read committed lock timeout 9 no auto undo;

    ------------------ 2: change current role
    set role boss;

    ------------------ 3: write into session-level GTT
    -- should PASS because now we work as BOSS who has granted to write into this table:
    insert into gtt_test(id, x) values(1,100);

    ------------------ 4: define session-level context variables
    set term ^;
    execute block as
    begin
        rdb$set_context('USER_SESSION','WHATS_MY_NAME', current_user);
        rdb$set_context('USER_SESSION','WHATS_MY_ROLE', current_role);
    end^
    set term ;^


    ---------------------- 5: make num overflow with default decfloat trap settings
    -- Should raise:
    -- Statement failed, SQLSTATE = 22003
    -- Decimal float overflow.  The exponent of a result is greater than the magnitude allowed.

    select 'Point before call sp_decfloat_test with trap settings: {Division_by_zero, Invalid_operation, Overflow}' as msg from rdb$database;
    select * from sp_decfloat_test;

    
    -- this will CLEAR previous trap settings which were: {Division_by_zero, Invalid_operation, Overflow}
    set decfloat traps to Inexact;

   
    select 'Point before call sp_decfloat_test with trap settings: {Inexact}' as msg from rdb$database;
    -- Should raise:
    --  Statement failed, SQLSTATE = 22000
    --  Decimal float inexact result.  The result of an operation cannot be represented as a decimal fraction.
    select * from sp_decfloat_test;

    ------------------ check state  BEFORE session reset:
    select * from v_info;
    set count on;
    select * from mon$context_variables;
    select * from gtt_test;
    set count off;


    -- ###################################
    -- ### R E S E T     S E S S I O N ###
    -- ###################################

    -- Should issue:
    -- Session was reset with warning(s)
    -- -Transaction is rolled back due to session reset, all changes are lost
    --##################
    alter session reset;
    --##################


    select 'Point AFTER reset session, before call sp_decfloat_test' as msg from rdb$database;
    -- Should raise:
    -- Statement failed, SQLSTATE = 22003
    -- Decimal float overflow.  The exponent of a result is greater than the magnitude allowed.
    -- (i.e. the same as it was when trap setting were: {Division_by_zero, Invalid_operation, Overflow} )
    select * from sp_decfloat_test;


    ------------------ check state AFTER session reset:

    select * from v_info; -- should contain "MY_ROLE       ACNT"

    set count on;
    select * from mon$context_variables; -- should be EMPTY
    select * from gtt_test; -- should raise Statement failed, SQLSTATE = 28000 / no permission for SELECT access to TABLE GTT_TEST
    set count off;
    commit;

    -- cleanup:
    -- ########
    connect '$(DSN)' user sysdba password 'masterkey';
    drop user tmp$user4test;
    commit;
  """,
  'expected_stdout':
  """
     MSG                             Point before call sp_decfloat_test with trap settings: {Division_by_zero, Invalid_operation, Overflow}
     MSG                             Point before call sp_decfloat_test with trap settings: {Inexact}
     MY_NAME                         TMP$USER4TEST
     MY_ROLE                         BOSS
     TX_ISOL_MODE                    4
     TX_LOCK_TIMEOUT                 9
     TX_READ_ONLY                    1
     TX_AUTO_UNDO                    0
     MON$ATTACHMENT_ID               7
     MON$TRANSACTION_ID              <null>
     MON$VARIABLE_NAME               WHATS_MY_NAME
     MON$VARIABLE_VALUE              TMP$USER4TEST
     MON$ATTACHMENT_ID               7
     MON$TRANSACTION_ID              <null>
     MON$VARIABLE_NAME               WHATS_MY_ROLE
     MON$VARIABLE_VALUE              BOSS
     Records affected: 2
     ID                              1
     X                               100
     Records affected: 1
     MSG                             Point AFTER reset session, before call sp_decfloat_test
     MY_NAME                         TMP$USER4TEST
     MY_ROLE                         ACNT
     TX_ISOL_MODE                    4
     TX_LOCK_TIMEOUT                 9
     TX_READ_ONLY                    1
     TX_AUTO_UNDO                    0
     Records affected: 0
  """,
  'expected_stderr':
  """
    Statement failed, SQLSTATE = 22003
    Decimal float overflow.  The exponent of a result is greater than the magnitude allowed.
    -At procedure 'SP_DECFLOAT_TEST' line: 5, col: 13
    -At procedure 'SP_DECFLOAT_TEST' line: 8, col: 17

    Statement failed, SQLSTATE = 22000
    Decimal float inexact result.  The result of an operation cannot be represented as a decimal fraction.
    -At procedure 'SP_DECFLOAT_TEST' line: 5, col: 13
    -At procedure 'SP_DECFLOAT_TEST' line: 8, col: 17

    Session was reset with warning(s)
    -Transaction is rolled back due to session reset, all changes are lost

    Statement failed, SQLSTATE = 22003
    Decimal float overflow.  The exponent of a result is greater than the magnitude allowed.
    -At procedure 'SP_DECFLOAT_TEST' line: 5, col: 13
    -At procedure 'SP_DECFLOAT_TEST' line: 8, col: 17

    Statement failed, SQLSTATE = 28000
    no permission for SELECT access to TABLE GTT_TEST
  """,
  'substitutions': [
      ('-At line[:]{0,1}[\s]+[\d]+,[\s]+column[:]{0,1}[\s]+[\d]+', ''),
      ('line[:]{0,1}[\s]+[\d]+,[\s]+col[:]{0,1}[\s]+[\d]+', ''),
      ('-Effective user is.*', '')
  ]
}
]
}
