{
'id': 'functional.arno.indices.timestamps_01',
'qmid': 'functional.arno.indexes.timestamps_01',
'tracker_id': '',
'title': 'TIMESTAMP in index with values below julian date',
'description': "Datetime values below the julian date (firebird base date '1858-11-17') should be stored in correct order.",
'versions': [
{
 'firebird_version': '2.0',
 'platform': 'All',
 'init_script': """CREATE TABLE Era (
  BeginDateTime TIMESTAMP NOT NULL,
  EndDateTime TIMESTAMP NOT NULL
);

COMMIT;

INSERT INTO ERA (BeginDateTime, EndDateTime) VALUES ('1500-01-01', '1550-12-31');
INSERT INTO ERA (BeginDateTime, EndDateTime) VALUES ('1858-11-17', '1858-11-17');
INSERT INTO ERA (BeginDateTime, EndDateTime) VALUES ('1858-11-15 18:00', '1858-11-15 20:00');
INSERT INTO ERA (BeginDateTime, EndDateTime) VALUES ('1858-11-16 12:00', '1858-11-16 13:00');
INSERT INTO ERA (BeginDateTime, EndDateTime) VALUES ('1858-11-18 16:00', '1858-11-18 17:00');
INSERT INTO ERA (BeginDateTime, EndDateTime) VALUES ('2004-04-08 02:00', '2004-04-08 02:09');

COMMIT;

CREATE UNIQUE ASC INDEX PK_BeginDateTime ON Era (BeginDateTime);
CREATE UNIQUE ASC INDEX PK_EndDateTime ON Era (EndDateTime);

COMMIT;""",
 'test_type': 'ISQL',
 'test_script': """SET PLAN ON;
SELECT
  e.BeginDateTime,
  e.EndDateTime
FROM
  Era e
WHERE
  e.BeginDateTime >= '1700-01-01'
ORDER BY
  BeginDateTime ASC;
""",
 'expected_stdout': """PLAN (E ORDER PK_BEGINDATETIME INDEX (PK_BEGINDATETIME))

            BEGINDATETIME               ENDDATETIME
========================= =========================

1858-11-15 18:00:00.0000  1858-11-15 20:00:00.0000
1858-11-16 12:00:00.0000  1858-11-16 13:00:00.0000
1858-11-17 00:00:00.0000  1858-11-17 00:00:00.0000
1858-11-18 16:00:00.0000  1858-11-18 17:00:00.0000
2004-04-08 02:00:00.0000  2004-04-08 02:09:00.0000
""",
 'substitutions': [('=.*','')]
},
{
 'firebird_version': '3.0',
 'platform': 'All',
 'init_script': 
  """
    create table era (
      begindatetime timestamp not null,
      enddatetime timestamp not null
    );
    commit;
    
    insert into era (begindatetime, enddatetime) values ('1500-01-01', '1550-12-31');
    insert into era (begindatetime, enddatetime) values ('1858-11-17', '1858-11-17');
    insert into era (begindatetime, enddatetime) values ('1858-11-15 18:00', '1858-11-15 20:00');
    insert into era (begindatetime, enddatetime) values ('1858-11-16 12:00', '1858-11-16 13:00');
    insert into era (begindatetime, enddatetime) values ('1858-11-18 16:00', '1858-11-18 17:00');
    insert into era (begindatetime, enddatetime) values ('2004-04-08 02:00', '2004-04-08 02:09');
    commit;
    
    create unique asc index pk_begindatetime on era (begindatetime);
    create unique asc index pk_enddatetime on era (enddatetime);
    commit;
  """,
 'test_type': 'ISQL',
 'test_script': 
  """
    -- Queries with RANGE index scan now have in the plan only "ORDER"
    -- clause (index navigation) without bitmap building.
    -- See: http://tracker.firebirdsql.org/browse/CORE-1550
    -- ("the same index should never appear in both ORDER and INDEX parts of the same plan item")
    set plan on;
    select
      e.begindatetime,
      e.enddatetime
    from
      era e
    where
      e.begindatetime >= '1700-01-01'
    order by
      begindatetime asc;
  """,
 'expected_stdout': 
  """
    PLAN (E ORDER PK_BEGINDATETIME)
                BEGINDATETIME               ENDDATETIME
    ========================= =========================
    1858-11-15 18:00:00.0000  1858-11-15 20:00:00.0000
    1858-11-16 12:00:00.0000  1858-11-16 13:00:00.0000
    1858-11-17 00:00:00.0000  1858-11-17 00:00:00.0000
    1858-11-18 16:00:00.0000  1858-11-18 17:00:00.0000
    2004-04-08 02:00:00.0000  2004-04-08 02:09:00.0000
  """,
 'substitutions': [('=.*','')]
}

]
}
