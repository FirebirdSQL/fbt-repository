{
'id': 'bugs.core_3100',
'qmid': None,
'tracker_id': 'CORE-3100',
'title': 'Wait mode and lock timeout of external transaction of EXECUTE STATEMENT not matched to corresponding parameters of local transaction',
'description': '',
'min_versions': '2.5.0',
'versions': [
{
 'firebird_version': '2.5',
 'platform': 'All',
 'page_size': '4096',
 'init_script': 
  """
    recreate table mon_trn(
        run_no         smallint,
        trn_mnemona    varchar(8),
        trn_id         bigint,
        att_id         bigint,
        state          bigint,
        dts            timestamp,
        top_trn        bigint,
        oldest_trn     bigint,
        oldest_active  bigint,
        isolation_mode bigint,
        lock_timeout   bigint,
        read_only      bigint,
        auto_commit    bigint,
        auto_undo      bigint,
        stat_id        bigint
    );
    commit;
  """,
 'test_type': 'ISQL',
 'test_script': 
  """
    set autoddl off;
    commit;
    set transaction no wait;
    set term ^;
    execute block as
      declare v_outer_trn bigint;
    begin
      v_outer_trn = current_transaction;
      in autonomous transaction do
    insert into mon_trn(
        run_no
        ,trn_mnemona
        ,trn_id
        ,att_id
        ,state
        ,dts
        ,top_trn
        ,oldest_trn
        ,oldest_active
        ,isolation_mode
        ,lock_timeout
        ,read_only
        ,auto_commit
        ,auto_undo
        ,stat_id
    )
    select
         1
        ,iif( mon$transaction_id  = current_transaction, 'autonom1', 'outer1')
        ,mon$transaction_id
        ,mon$attachment_id
        ,mon$state
        ,mon$timestamp
        ,mon$top_transaction
        ,mon$oldest_transaction
        ,mon$oldest_active
        ,mon$isolation_mode
        ,mon$lock_timeout
        ,mon$read_only
        ,mon$auto_commit
        ,mon$auto_undo
        ,mon$stat_id
    from mon$transactions
    where mon$transaction_id in (current_transaction, :v_outer_trn);
    end
    ^
    commit
    ^
    
    set transaction lock timeout 7
    ^
    execute block as
      declare v_outer_trn bigint;
    begin
      v_outer_trn = current_transaction;
      in autonomous transaction do
    insert into mon_trn(
        run_no
        ,trn_mnemona
        ,trn_id
        ,att_id
        ,state
        ,dts
        ,top_trn
        ,oldest_trn
        ,oldest_active
        ,isolation_mode
        ,lock_timeout
        ,read_only
        ,auto_commit
        ,auto_undo
        ,stat_id
    )
    select
         2
        ,iif( mon$transaction_id  = current_transaction, 'autonom2', 'outer2')
        ,mon$transaction_id
        ,mon$attachment_id
        ,mon$state
        ,mon$timestamp
        ,mon$top_transaction
        ,mon$oldest_transaction
        ,mon$oldest_active
        ,mon$isolation_mode
        ,mon$lock_timeout
        ,mon$read_only
        ,mon$auto_commit
        ,mon$auto_undo
        ,mon$stat_id
    from mon$transactions
    where mon$transaction_id in (current_transaction, :v_outer_trn);
    end
    ^
    commit
    ^
    
    set term ;^
    
    set list on;
    select run_no
        ,count(distinct m.trn_mnemona) num_of_trn_started
        ,count(distinct m.isolation_mode) isol_mode_distinct
        ,count(distinct m.lock_timeout) timeout_distinct
        ,count(distinct m.read_only) readonly_distinct
        ,count(distinct m.auto_commit) auto_commit_distinct
        ,count(distinct m.auto_undo) auto_undo_distinct
    from mon_trn m
    group by run_no;
  """,
 'expected_stdout': 
  """
    RUN_NO                          1
    NUM_OF_TRN_STARTED              2
    ISOL_MODE_DISTINCT              1
    TIMEOUT_DISTINCT                1
    READONLY_DISTINCT               1
    AUTO_COMMIT_DISTINCT            1
    AUTO_UNDO_DISTINCT              1
    
    RUN_NO                          2
    NUM_OF_TRN_STARTED              2
    ISOL_MODE_DISTINCT              1
    TIMEOUT_DISTINCT                1
    READONLY_DISTINCT               1
    AUTO_COMMIT_DISTINCT            1
    AUTO_UNDO_DISTINCT              1
  """
}
]
}
