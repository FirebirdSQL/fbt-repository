{
'id': 'bugs.core_1366',
'qmid': None,
'tracker_id': 'CORE-1366',
'title': 'French insensitive collation FR_FR_CI_AI',
'description': '',
'min_versions': '2.5.0',
'versions': [
{
 'firebird_version': '2.5',
 'platform': 'All',
 'page_size': '4096',
 'test_type': 'ISQL',
 'database_character_set': 'ISO8859_1',
 'connection_character_set': 'ISO8859_1',
 'init_script': 
  """
    -- ::: NOTE :::
	-- In order to check correctness of following statements under ISQL itself (NOT under fbt_run), do following:
	-- 1) open some text editor that supports charset = ISO8859_1 and set encoding for new document = ISO 8859-1
	--   (e.g. in Notepad++ pull-down menu: "Encoding / Character sets / Western european / ISO 8859_1")
	-- 2) type commands statements that contains diacritical marks (accents) and save to .sql
	-- 3) open this .sql in FAR editor and ensure that letters with diacritical marks are displayed as SINGLE characters
	-- 4) run isql -i <script_encoded_in_iso8859_1.sql>
	-- In order to run this script under fbt_run:
	-- 1) open Notepad++ new .fbt document and set Encoding = "UTF8 without BOM"
	-- 2) copy-paste text from <script_encoded_in_iso8859_1.sql>, ensure that letters with diacritical marks are readable
	--    (it should be pasted here in UTF8 encoding)
	-- 3) add in `expected_stdout` section required output by copy-paste from result of isql -i <script_encoded_in_iso8859_1.sql>
	--    (it should be pasted here in UTF8 encoding)
	-- 4) save .fbt and ensure that it was saved in UTF8 encoding, otherwise exeption like
	--    "UnicodeDecodeError: 'utf8' codec can't decode byte 0xc3 in position 621: invalid continuation byte"
	--    will raise.
	recreate table test(id int);
	commit;

	set term ^;
	execute block as
	begin
		begin execute statement 'drop collation coll_fr'; when any do begin end end
		begin execute statement 'drop sequence g'; when any do begin end end
	end
	^set term ;^
	commit;

	create collation coll_fr for iso8859_1 from external ('FR_FR') case insensitive accent insensitive;
	commit;
	create sequence g;

	recreate table test(id int, cf varchar(10) collate coll_fr);
	commit;

	recreate table noac(id int, nf varchar(10) collate coll_fr);
	commit;

	-- http://french.about.com/od/pronunciation/a/accents.htm
	
	-- ### ONCE AGAIN ###
	-- 1) for checking this under ISQL following must be encoded in ISO8859_1
	-- 2) for running under fbt_run utility following must be encoded in UTF8.
	
	-- (cedilla) is found only on the letter "C":
	insert into test(id, cf) values( gen_id(g,1), 'ç');
	
	-- (acute accent) can only be on an "E" 
	insert into test(id, cf) values( gen_id(g,1), 'é');
	
	-- (grave accent) can be found on an "A", "E", "U"
	insert into test(id, cf) values( gen_id(g,1), 'à');
	insert into test(id, cf) values( gen_id(g,1), 'è');
	insert into test(id, cf) values( gen_id(g,1), 'ù');
	
	-- (dieresis or umlaut) can be on an E, I and U
	insert into test(id, cf) values( gen_id(g,1), 'ë');
	insert into test(id, cf) values( gen_id(g,1), 'ï');
	insert into test(id, cf) values( gen_id(g,1), 'ü');
	
	-- (circumflex) can be on an A, E, I, O and U
	insert into test(id, cf) values( gen_id(g,1), 'â');
	insert into test(id, cf) values( gen_id(g,1), 'ê');
	insert into test(id, cf) values( gen_id(g,1), 'î');
	insert into test(id, cf) values( gen_id(g,1), 'û');
	insert into test(id, cf) values( gen_id(g,1), 'ô');
	commit;

	-- ANSI letters that should be equal to diacritical
	-- when doing comparison CI_AI:
	insert into noac(id, nf) values( gen_id(g,1), 'A');
	insert into noac(id, nf) values( gen_id(g,1), 'C');
	insert into noac(id, nf) values( gen_id(g,1), 'E');
	insert into noac(id, nf) values( gen_id(g,1), 'I');
	insert into noac(id, nf) values( gen_id(g,1), 'O');
	insert into noac(id, nf) values( gen_id(g,1), 'U');
	commit;

  """,
 'test_script': 
  """
	select n.id n_id, n.nf, t.cf, t.id t_id
	from noac n
	--left join test t on n.nf = t.cf ;
	left join test t on n.nf is not distinct from t.cf 
	order by n_id, t_id;
  """,
 'expected_stdout':
  """
			N_ID NF         CF                 T_ID 
	============ ========== ========== ============ 
			  14 A          à                     3 
			  14 A          â                     9 
			  15 C          ç                     1 
			  16 E          é                     2 
			  16 E          è                     4 
			  16 E          ë                     6 
			  16 E          ê                    10 
			  17 I          ï                     7 
			  17 I          î                    11 
			  18 O          ô                    13 
			  19 U          ù                     5 
			  19 U          ü                     8 
			  19 U          û                    12 
  """,
  'substitutions': [('=.*','')]
}
]
}
