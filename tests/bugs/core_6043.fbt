{
'id': 'bugs.core_6043',
'qmid': None,
'tracker_id': 'CORE-6043',
'title': 'GTTs do not release used space',
'description': 
 """
   === For FB 3.x ===
       Test obtains full path to $fb_home via FBSVCMGR info_get_env.
       Then it makes copy of file 'databases.conf' that is in $fb_home directory because 
       following lines will be added to that 'databases.conf':
       ===
       tmp_6043_keep = ...
       {
           ClearGTTAtRetaining = 0
       }
       After this, it does connect to this alias and run statements from ticket with commit/rollback retain.
       We check that:
         * COMMIT RETAIN preserves record that was inserted in the statement before this commit;
         * ROLLBACK RETAIN does NOT delete record that was inserted before COMMIT RETAIN.

       Then we check the same for ClearGTTAtRetaining = 1 (i.e. for default value) - just to ensure that it works.
       Finally, previous databases.conf file is restored in initial state.

   === For FB 4.x ===
       It is enough just to run ISQL; databases.conf can be left unchanged.

   Checked on:
      4.0.0.1501: OK, 1.827s.
      3.0.5.33123: OK, 2.807s.
 """,
'min_versions': '3.0',
'versions': [
{
 'firebird_version': '3.0',
 'platform': 'All',
 'init_script': 
  """
  """,
 'test_type': 'Python',
 'test_script':"""\
import os
import subprocess
import time
import shutil
from fdb import services

os.environ["ISC_USER"] = user_name
os.environ["ISC_PASSWORD"] = user_password

fb_home = services.connect(host='localhost', user= user_name, password= user_password).get_home_directory()
this_db = db_conn.database_name
db_conn.close()

# Resut: fb_home is full path to FB instance home (with trailing slash).

shutil.copy2( fb_home+'databases.conf', fb_home+'databases.bak' )

f_dbconf=open(fb_home+'databases.conf','a')
f_dbconf.seek(0, 2)

alias_data=\
'''
# Created temply by fbtest, CORE-6043. Should be removed auto.
tmp_6043_keep = %(this_db)s 
{
    # Value of 0 makes engine to not clear GTT data on COMMIT/ROLLBACK RETAINING and let application to see it.
    # Default value is 1 (clear GTT data on commit/rollback retaining).
    # Note: in Firebird 4 default value will be changed to 0 and this setting will
    # be removed at Firebird 5.

    ClearGTTAtRetaining = 0

}
''' % locals()

f_dbconf.write(alias_data)
f_dbconf.close()

#shutil.copy2( fb_home+'databases.conf', fb_home+'databases.new' )

isql_script='''
    set list on;

    recreate global temporary table gtt (id int) on commit delete rows;
    commit;

    set count off;
    insert into gtt values (3);
    commit retain;

    set count on;
    select * from gtt; -- point 1

    set count off;
    insert into gtt values (4);
    rollback retain;

    set count on;
    select * from gtt; -- point 2
'''

f_isql_cmd=open( os.path.join(context['temp_directory'],'tmp_isql_6043.sql'), 'w')
f_isql_cmd.write( isql_script )
f_isql_cmd.close()

f_isql_log=open( os.path.join(context['temp_directory'],'tmp_isql_6043.log'), 'w')
subprocess.call(["isql", 'localhost:tmp_6043_keep',  "-q", "-i", f_isql_cmd.name], stdout=f_isql_log, stderr=subprocess.STDOUT)
f_isql_log.close()

with open( f_isql_log.name,'r') as f:
    for line in f:
        if line.split():
            print( 'When ClearGTTAtRetaining = 0: ' + line )

####################################################################

shutil.copy2( fb_home+'databases.bak', fb_home+'databases.conf' )

f_dbconf=open(fb_home+'databases.conf','a')
f_dbconf.seek(0, 2)

alias_data=\
'''
# Created temply by fbtest, CORE-6043. Should be removed auto.
tmp_6043_kill = %(this_db)s 
{
    # Check that 1 really works as default value (i.e. clears GTT data on commit/rollback retaining).
    ClearGTTAtRetaining = 1
}
''' %locals()
f_dbconf.write(alias_data)
f_dbconf.close()

f_isql_log=open( os.path.join(context['temp_directory'],'tmp_isql_6043.log'), 'w')
subprocess.call(["isql", 'localhost:tmp_6043_kill',  "-q", "-i", f_isql_cmd.name], stdout=f_isql_log, stderr=subprocess.STDOUT)
f_isql_log.close()

with open( f_isql_log.name,'r') as f:
    for line in f:
        if line.split():
            print( 'When ClearGTTAtRetaining = 1: ' + line )

####################################################################

shutil.copy2( fb_home+'databases.bak', fb_home+'databases.conf' )
os.remove( fb_home+'databases.bak' )


#####################################################################
# Cleanup:

# do NOT remove this pause otherwise some of logs will not be enable for deletion and test will finish with 
# Exception raised while executing Python test script. exception: WindowsError: 32
time.sleep(1)

os.remove(f_isql_log.name)
os.remove(f_isql_cmd.name)

  """,
 'expected_stdout':
  """
    When ClearGTTAtRetaining = 0: ID                              3
    When ClearGTTAtRetaining = 0: Records affected: 1
    When ClearGTTAtRetaining = 0: ID                              3
    When ClearGTTAtRetaining = 0: Records affected: 1

    When ClearGTTAtRetaining = 1: Records affected: 0
    When ClearGTTAtRetaining = 1: Records affected: 0
  """,
 'expected_stderr':
  """
  """
},
{
 'firebird_version': '4.0',
 'platform': 'All',
 'init_script': 
  """
  """,
 'test_type': 'ISQL',
 'test_script':
  """
    set list on;

    recreate global temporary table gtt (id int) on commit delete rows;
    commit;

    set count off;
    insert into gtt values (4);
    commit retain;

    set count on;
    select * from gtt; -- point 1

    set count off;
    insert into gtt values (5);
    rollback retain;

    set count on;
    select * from gtt; -- point 2
  """,
 'expected_stdout':
  """
    ID                              4
    Records affected: 1

    ID                              4
    Records affected: 1
  """,
 'expected_stderr':
  """
  """
}

]
}
