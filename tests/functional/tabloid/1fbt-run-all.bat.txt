@echo off
setlocal enabledelayedexpansion enableextensions

if "%1"=="" (
  echo Arg #1 is mandatory - name of .sql
  exit
)


call :readcfg %~n0.conf

@echo off

copy e21.fd0 e21.fdb 1>nul
echo.
echo|set /p=%time%, test: 
%fb21sS_bin%\fbsvcmgr localhost/%fb21sS_port%:service_mgr user %isc_user% password %isc_password% info_server_version
set run_isql=%fb21sS_bin%\isql localhost/%fb21sS_port%:%~dp0e21.fdb -i %1
echo %run_isql%
cmd /c %run_isql% 1>e21sS.log 2>e21sS.err

copy e25.fd0 e25.fdb 1>nul
echo.
echo|set /p=%time%, test: 
%fb25sC_bin%\fbsvcmgr localhost/%fb25sC_port%:service_mgr user %isc_user% password %isc_password% info_server_version
set run_isql=%fb25sC_bin%\isql localhost/%fb25sC_port%:%~dp0e25.fdb -i %1
echo %run_isql%
cmd /c %run_isql% 1>e25sC.log 2>e25sC.err

copy e30.fd0 e30.fdb 1>nul
echo.
echo|set /p=%time%, test: 
%fb30sC_bin%\fbsvcmgr localhost/%fb30sC_port%:service_mgr user %isc_user% password %isc_password% info_server_version
set run_isql=%fb30sC_bin%\isql localhost/%fb30sC_port%:%~dp0e30.fdb -i %1
echo %run_isql%
cmd /c %run_isql% 1>e30sC.log 2>e30sC.err

copy e30.fd0 e30.fdb 1>nul
echo.
echo|set /p=%time%, test: 
%fb30sS_bin%\fbsvcmgr localhost/%fb30sS_port%:service_mgr user %isc_user% password %isc_password% info_server_version
set run_isql=%fb30sS_bin%\isql localhost/%fb30sS_port%:%~dp0e30.fdb -i %1
echo %run_isql%
cmd /c %run_isql% 1>e30sS.log 2>e30sS.err

for /f "tokens=*" %%A in ('dir /b e21sS.* e25sC.* e30sC.* e30sS.*') do (
  set esize=%%~zA
  if .!esize!.==.. set esize=0
  if .!esize!.==.0. del %%A 2>nul
)

goto end

:readcfg

set cfg=%1
for /F "tokens=*" %%a in ('findstr /i /r /c:"^[ 	]*[a-z,0-9]" %cfg%') do (
  if "%%a" neq "" (

    @rem Detect whether value of parameter contain quotes or no. If yes than this
    @rem value should NOT be changed by removing its whitespaces.

    echo %%a|find """">nul

    if errorlevel 1 ( 
      @rem @echo ^|%%a^| - does NOT contain quotes
      for /F "tokens=1-2 delims==" %%i in ("%%a") do (
        @rem echo Parsed-NON-quoted: param="%%i" val="%%j"
        if "%%j"=="" (
          set err_setenv=1
          echo. && echo ### NO VALUE found for parameter "%%i" ### && echo.
        ) else (

          @rem _NAME_ and _VALUE_ of parameter (both can be with leading and trailing whitespaces):
          set par=%%i
          set val=%%j

          @rem -----------------------------------
          @rem When "delims=" clause is NOT specified then default delimeters are TAB and SPACE.
          @rem If we take 1st token from such string than it will be WITHOUT whitespaces.
          @rem Similarly for _VALUE_ of parameter:
          @rem -----------------------------------
          for /F "tokens=1" %%p in ("!par!") do (
            @rem echo param=^|%%i^|, name w/o white-spaces=^|%%p^|
            for /F "tokens=1" %%u in ("!val!") do (
              set %%p=%%u
              @rem echo param=^|%%p^|, value w/o white-spaces=^|%%u^|
            )
          )
        )
      )

    ) else (

      @rem @echo ^|%%a^| - DOES contain quotes
      for /F "tokens=1-2 delims==" %%i in ("%%a") do (
        @rem echo Parsed-quoted: param="%%i" val="%%j"
        set par=%%i

        if "%%j"=="" (
          set err_setenv=1
          echo. && echo ### NO VALUE found for parameter "%%i" ### && echo.
        ) else (
          @rem We can remove all white-spaces only from _NAME_ of parameter
          @rem but NOT from its _VALUE_
          for /F "tokens=1" %%p in ("!par!") do (
            set %%p=%%j
            @rem echo param=^|%%p^|, value w/o white-spaces=^|%%j^|
          )
        )
      )
    )
  )
)
goto:eof

:end
