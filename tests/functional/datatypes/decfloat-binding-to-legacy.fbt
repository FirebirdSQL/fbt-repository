{
'id': 'functional.datatypes.decfloat-binding-to-legacy',
'qmid': None,
'tracker_id': '',
'title': 
 """
   Test ability for DECFLOAT values to be represented as other data types using LEGACY keyword.
 """,
'description': 
 """
 """,
'min_versions': '4.0.0',
'versions': [
{
 'firebird_version': '4.0',
 'platform': 'All',
 'test_type': 'ISQL',
 'test_script': 
  """
    set list on;
    --set bail on;
    --set echo on;
    set sqlda_display on;

    -- Legacy, explicit and implicit:
    set bind of boolean to char(5);
    select not false and true as check_bind_bool_to_char from rdb$database;

    set bind of boolean to legacy;
    select not false and true as check_bind_bool_to_legacy from rdb$database;


    set bind of decfloat to double precision;
    select 3.141592653589793238462643383279502884197169399375105820974944592307816406286 as check_bind_decfloat_to_double from rdb$database;

    set bind of decfloat to legacy;
    select 3.141592653589793238462643383279502884197169399375105820974944592307816406286 as check_bind_decfloat_to_legacy from rdb$database;


    set bind of numeric(38) to numeric(18);
    select 3.141592653589793238462643383279502884197169399375105820974944592307816406286 as check_bind_n38_to_n18 from rdb$database;

    set bind of numeric(38) to legacy;
    select 3.141592653589793238462643383279502884197169399375105820974944592307816406286 as check_bind_n38_to_legacy from rdb$database;


    set bind of time with time zone to time without time zone;
    select time '10:00 America/Los_Angeles' as check_bind_time_with_zone_to_time from rdb$database;

    set bind of time with time zone to legacy;
    select time '10:00 America/Los_Angeles' as check_bind_time_with_zone_to_legacy from rdb$database;


    set bind of timestamp with time zone to timestamp without time zone;
    select timestamp '2018-01-01 12:00 GMT' as check_bind_timestamp_with_zone_to_timestamp from rdb$database;

    set bind of timestamp with time zone to legacy;
    select timestamp '2018-01-01 12:00 GMT' as check_bind_timestamp_with_zone_to_legacy from rdb$database;


  """,
  'expected_stdout':
  """
  """,
  'expected_stderr':
  """
  """,
  'substitutions':[ ('charset.*', ''), ('^((?!(sqltype|CHECK_BIND_)).)*$',''), ('[ \t]+',' ') ]
}
]
}
